{"version":3,"sources":["../src/index.es6.js"],"names":[],"mappings":"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","file":"index.js","sourcesContent":["'use strict';\n\nimport 'source-map-support/register';\nimport http from 'http';\nimport express from 'express';\nimport RED from 'node-red';\nimport os from 'os';\nimport fs from 'fs';\nimport { DeviceManagerStore } from './device-manager';\n\n// Listen port\nconst PORT = process.env.PORT || 8100;\nconst DEFAULT_PACKAGE_JSON = __dirname + '/../package.json';\n\nexport class CandyRed {\n  constructor(packageJsonPath) {\n    // Create an Express app\n    this.app = express();\n    // Create a server\n    this.server = http.createServer(this.app);\n\n    // Device Management\n    this.deviceManagerStore = new DeviceManagerStore(RED);\n\n    // Default Theme\n    this.flowFile = this._createCandyRedFlowFile();\n    this.editorTheme = this._createCandyRedEditorTheme();\n\n    // path to package.json\n    this.packageJsonPath = packageJsonPath;\n  }\n\n  start() {\n    this.server.listen(PORT);\n    this._setupExitHandler();\n    return this._inspectBoardStatus(this.packageJsonPath).then(versions => {\n      // Create the settings object - see default settings.js file for other options\n      let settings = this._createREDSettigngs(versions);\n\n      // Initialise the runtime with a server and settings\n      RED.init(this.server, settings);\n      settings.version += ` [candy-red v${versions.candyRedv}]`;\n\n      // Serve the http nodes from /api\n      this.app.use(settings.httpNodeRoot, RED.httpNode);\n\n      let flowFilePath = settings.userDir + '/' + this.flowFile;\n      this.deviceManagerStore.deviceState.testIfUIisEnabled(flowFilePath).then(enabled => {\n        if (enabled) {\n          RED.log.info('[CANDY RED] Deploying Flow Editor UI...');\n          // Add a simple route for static content served from 'public'\n          this.app.use('/', express.static(__dirname + '/public'));\n          if (settings.httpAdminRoot) {\n            this.app.get('/', (_, res) => {\n              res.redirect(settings.httpAdminRoot);\n            });\n          }\n          // Serve the editor UI from /red\n          this.app.use(settings.httpAdminRoot, RED.httpAdmin);\n        }\n\n        // Start the runtime\n        RED.start().then(() => {\n          RED.log.info(`Listen port=${PORT}`);\n        });\n      });\n    });\n  }\n\n  _createCandyRedFlowFile() {\n    return 'flows_candy-red_' + os.hostname() + '.json';\n  }\n\n  _createCandyRedEditorTheme() {\n    return {\n      page: {\n        title: 'CANDY RED@' + os.hostname(),\n        favicon: __dirname + '/public/images/candy-red.ico',\n        css: __dirname + '/public/css/candy-red.css'\n      },\n      header: {\n        title: ' ** ' + os.hostname() + ' **',\n        image: __dirname + '/public/images/candy-red.png'\n      },\n      menu: {\n        'menu-item-help': {\n          label: 'Powered By Node-RED',\n          url: 'http://nodered.org/docs'\n        },\n        'menu-item-keyboard-shortcuts': true\n      }\n    };\n  }\n\n  _createCandyBoxFlowFile() {\n    return 'flows_candy-box_' + os.hostname() + '.json';\n  }\n\n  _createCandyBoxEditorTheme() {\n    return {\n      page: {\n        title: 'CANDY BOX@' + os.hostname(),\n        favicon: __dirname + '/public/images/candy-box.ico',\n        css: __dirname + '/public/css/candy-box.css'\n      },\n      header: {\n        title: ' ** ' + os.hostname() + ' **',\n        image: __dirname + '/public/images/candy-box.png'\n      },\n      menu: {\n        'menu-item-help': {\n          label: 'Powered By Node-RED',\n          url: 'http://nodered.org/docs'\n        },\n        'menu-item-keyboard-shortcuts': true\n      }\n    };\n  }\n\n  _inspectBoardStatus(inputPackageJsonPath) {\n    return this.deviceManagerStore.deviceState.testIfCANDYIoTInstalled().then(candyIotv => {\n      if (candyIotv) {\n        this.flowFile = this._createCandyBoxFlowFile();\n        this.editorTheme = this._createCandyBoxEditorTheme();\n      }\n      return new Promise((resolve, reject) => {\n        fs.stat(inputPackageJsonPath, err => {\n          if (err) {\n            return reject(err);\n          }\n          return resolve(inputPackageJsonPath);\n        });\n      }).then(packageJsonPath => {\n        return new Promise(resolve => {\n          fs.readFile(packageJsonPath, (err, data) => {\n            if (err) {\n              return resolve({\n                candyIotv: candyIotv,\n                candyRedv: 'N/A'\n              });\n            }\n            let packageJson = JSON.parse(data);\n            return resolve({\n              candyIotv: candyIotv,\n              candyRedv: packageJson.version || 'N/A'\n            });\n          });\n        });\n      });\n    });\n  }\n\n  _setupExitHandler() {\n    // Exit handler\n    process.stdin.resume();\n    function exitHandler(err) {\n      console.log('[CANDY RED] Bye');\n      if (RED.settings && RED.settings.exitHandlers) {\n        RED.settings.exitHandlers.forEach(handler => {\n          try {\n            handler(RED);\n          } catch (err) {\n            console.log(`The error [${err}] is ignored`);\n            console.log(err.stack);\n          }\n        });\n      }\n      if (err instanceof Error) {\n        console.log(err.stack);\n        process.exit(1);\n      } else if (isNaN(err)) {\n        process.exit();\n      } else {\n        process.exit(err);\n      }\n    }\n    process.on('exit', exitHandler);\n    process.on('SIGINT', exitHandler);\n    process.on('uncaughtException', exitHandler);\n  }\n\n  _createREDSettigngs(versions) {\n    return {\n      verbose: true,\n      disableEditor: false,\n      httpAdminRoot: '/red',\n      httpNodeRoot: '/api',\n      userDir: (process.env.HOME || process.env.USERPROFILE) + '/.node-red',\n      flowFile: this.flowFile,\n      functionGlobalContext: {\n      },\n      exitHandlers: [],\n      deviceManagerStore: this.deviceManagerStore,\n      editorTheme: this.editorTheme,\n      candyIotVersion: versions.candyIotv,\n      candyRedVersion: versions.candyRedv,\n    };\n  }\n\n}\n\n// main\nif (require.main === module) {\n  let packageJsonPath = DEFAULT_PACKAGE_JSON;\n  if (process.argv.length > 2) {\n    packageJsonPath = process.argv[2];\n  }\n  let app = new CandyRed(packageJsonPath);\n  app.start().catch(err => {\n    console.error(err.stack);\n    process.exit(1);\n  });\n}\n"]}