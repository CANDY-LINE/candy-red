{"version":3,"sources":["../../../src/nodes/local-node-candy-egg/candy-egg-ws.es6.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;kBAiBsB,IAAI;;mBACP,KAAK;;IAElB,wBAAwB,GAAG,CAAA,CAAK;;qBAEvB,UAAS,CAAG;MAEnB,CAAiB;AACV,aADP,CAAiB,CACT,CAAa,EAAE,CAAO,EAAE,CAAI,EAAE,CAAkB,EAAE,CAAO;4BADjE,CAAiB,GAEnB,IAAI,cAAc,GAAG,CAAa,EAClC,IAAI,QAAQ,GAAG,CAAO,EACtB,IAAI,KAAK,GAAG,CAAI,EAChB,IAAI,mBAAmB,GAAG,CAAkB,EAC5C,IAAI,OAAO,GAAG,IAAI,EAElB,IAAI,YAAY,GAAG,EAAE,EACrB,IAAI,aAAa,GAAG,EAAE,EACtB,IAAI,QAAQ,GAAG,CAAA,CAAK,EACpB,IAAI,QAAQ,GAAG,CAAO,IAAI,EAAE,EAC5B,IAAI,SAAS,GAAG,CAAC,EACjB,IAAI,UAAU,GAAG,CAAC,EAClB,IAAI,UAAU,EAAE;KACjB;;wBAfG,CAAiB;;aAiBZ,UAAC,CAAG;AACX,YAAI,CAAI,GAAG,IAAI,cAAc;YACzB,CAAM,GAAG,IAAI,IAAI,CAAI,OAAO,GAAG,GAAG,GAAG,EAAE,CAAA,AAAC,GAAG,KAAK,CADtB;AAE9B,SAAM,IAAI,CAAI,UAAU,GAAG,GAAG,GAAG,CAAI,cAAc,GAAG,GAAG,CAAA;AACzD,YAAI,CAAS,GAAG,CAAI,WAAW,MAAM,CAAC,GAAG,CAAC,CAAC;AAC3C,SAAM,IAAI,CAAS,CAAC,CAAC,CAAC,CAAA;AACtB,YAAI,CAAI,GAAG,IAAI,KAAK,CAAC;;AACrB,YAAI,CAAG,EAAE;AACP,cAAI,CAAM,GAAG,sBAAY,CAAC,CAAG,CAAC,CAAC;;AAC/B,AAAK,WAAM,KAAK,IAGd,CAAM,GAAG,CAAM,KAAK,EACpB,CAAI,GAAG,IAAI,CADS,GAFpB,CAAI,GAAG,CAAM,KAAK,AAInB,CAAA;SACF,MACC,CAAM,IAAI,GAAG,GAAG,CAAS,CAAC,CAAC,CAAC,GAAG,MAAM,CAAC,AACvC;;AAED,AAAI,SAAI,IAAI,CAAI,OAAO,GAAG,CAAC,IAAI,AAAmB,GAAG,KAAtB,CAAI,OAAO,CAAC,CAAC,CAAC,AAAQ,KACnD,CAAM,IAAI,GAAG,CAAA,AACd,EACD,AAAI,CAAI,KACN,CAAM,IAAI,CAAI,CAAA,AACf,AAHA,CAAA;AAID,YAAI,CAAM,GAAG,oBAAc,CAAM,EAAE,IAAI,QAAQ,CAAC,CAAC;AACjD,YAAI,OAAO,GAAG,CAAM,EACpB,IAAI,iBAAiB,CAAC,CAAM,CAAC,AADT,CAAA;OAErB;;;aAEe,UAAW,CAAM;;YAC3B,CAAE,GAAG,CAAC,CAAC,GAAC,AAAc,UAAU,GAAxB,IAAI,OAAO,EAAE,AAAW,CAAA,SAAU,CAAC,EAAE,CAAC;AAClD,SAAM,GAAG,CAAC,MAAM,EAAE;AAChB,oBAAa,CAAC,QAAQ,CAAC,EACvB,UAAa,GAAG,CAAC,EACjB,WAAc,GAAG,CAAC,EAClB,CAAM,sBAAsB,GAAG,CAAA,CAAK,AAHb,CAAA;SAIxB,CAAC,EACF,CAAM,GAAG,CAAC,OAAO,EAAE;AACjB,AAAI,WAAM,sBAAsB,KAGhC,UAAa,CAAC,QAAQ,CAAC,EACvB,AAAK,SAAY,KAEf,MAAS,GAAG,UAAU,CAAC;AAAQ,uBAAc,EAAE,CAAC;WAAE,EAAE,IAAI,GAAG,AAAgB,IAAI,GAApB,IAAI,OAAO,EAAE,AAAO,CAAC,CAAA,AACjF,CAJsB,AADtB,CAAA;SAMF,CAAC,EACF,CAAM,GAAG,CAAC,SAAS,EAAE,UAAC,CAAI,EAAC,CAAK;AAC9B,uBAAgB,CAAC,CAAE,EAAC,CAAM,EAAC,SAAS,EAAC,CAAI,EAAC,CAAK,CAAC,CAAC;SAClD,CAAC,EACF,AAAI,wBAAwB,IAC1B,CAAM,mBAAmB,CAAC,MAAM,CAAC,AAClC,EACD,CAAM,GAAG,CAAC,MAAM,EAAE,UAAC,CAAI,EAAC,CAAK;AAC3B,oBAAa,CAAC,MAAM,EAAE,CAAI,EAAE,CAAK,CAAC,CAAC;SACpC,CAAC,EACF,CAAM,GAAG,CAAC,qBAAqB,EAAE,UAAC,CAAG,EAAE,CAAG;AAIxC,eAHA,UAAa,CAAC,MAAM,EAAE,CAAG,EAAE,CAAG,CAAC,EAC/B,CAAG,MAAM,EAAE,EACX,CAAG,OAAO,IAAI,EAAE,EACZ,AAAmB,GAAG,KAAtB,CAAG,WAAW,AAAQ,IAAI,AAAmB,GAAG,KAAtB,CAAG,WAAW,AAAQ,IAAI,AAAmB,GAAG,KAAtB,CAAG,WAAW,AAAQ,CAH/C,EAI7B,IAAI,CAAG,QAAQ,SAAS,EAAE;AACxB,gBAAI,EAAA,UAAa,GAAG,CAAC,CAAA,EAKnB,OADA,EAAE,UAAa,EACR,WAAc,CAAC,CAAG,QAAQ,SAAS,CAAC,AAD5B,CAC6B,AAC7C;AALC,sBAAa,GAAG,CAAC,EACjB,CAAG,IAAI,MAAM,CAAC,CAAG,EAAE,CAAC,wCAAwC,EAAE;AAAE,oBAAM,MAAS;AAAE,wBAAU,CAAG,QAAQ,SAAS;aAAE,CAAC,CAAC,AADlG,CAAA;WAMpB,MACI,IAAI,AAAmB,GAAG,KAAtB,CAAG,WAAW,AAAQ,EAC/B,CAAG,IAAI,MAAM,CAAC,CAAG,EAAE,CAAC,gCAAgC,EAAE;AAAE,kBAAM,MAAS;WAAE,CAAC,CAAC,CAAC,KACvE,IAAI,AAAmB,GAAG,KAAtB,CAAG,WAAW,AAAQ,EAAE;AAGjC,iBAFA,CAAG,IAAI,MAAM,CAAC,CAAG,EAAE,CAAC,gCAAgC,EAAE;AAAE,oBAAM,MAAS;AAAE,oBAAM,eAAkB,UAAU;aAAE,CAAC,CAAC,EAC/G,EAAE,WAAc,EACZ,WAAc,GAAG,EAAE,CAFwF,EAG7G,OAAO,AACR;AACD,aAAG,IAAI,KAAK,CAAC,CAAG,EAAE,CAAC,gCAAgC,CAAC,CAAC,CAAA;WACtD,MACC,CAAG,IAAI,MAAM,CAAC,CAAG,EAAE,CAAC,kCAAkC,EAAE;AAAE,kBAAM,MAAS;AAAE,oBAAQ,CAAG,WAAW;WAAE,CAAC,CAAC,CAAC,AACvG;AAED,WAAM,sBAAsB,GAAG,CAAA,CAAI,EACnC,CAAM,MAAM,EAAE,EACd,MAAS,GAAG,UAAU,CAAC;AAAQ,uBAAc,EAAE,CAAC;WAAE,EAAE,KAAK,GAAG,AAAgB,KAAK,GAArB,IAAI,OAAO,EAAE,AAAQ,CAAC,EAClF,UAAa,GAAG,CAAC,AAHkB,CAAA;SAIpC,CAAC,EACF,CAAM,GAAG,CAAC,OAAO,EAAE,UAAA,CAAG;AACpB,oBAAa,CAAC,MAAM,EAAE,CAAG,CAAC,EAC1B,CAAG,IAAI,MAAM,CAAC,CAAG,EAAE,CAAC,mCAAmC,EAAE;AAAE,iBAAK,CAAG;AAAE,wBAAY,eAAkB,WAAW;WAAC,CAAC,CAAC,EACjH,CAAM,sBAAsB,GAAG,CAAA,CAAI,EACnC,CAAM,MAAM,EAAE,EACd,AAAK,SAAY,KAEf,MAAS,GAAG,UAAU,CAAC;AAAQ,uBAAc,EAAE,CAAC;WAAE,EAAE,IAAI,GAAG,AAAgB,IAAI,GAApB,IAAI,OAAO,EAAE,AAAO,CAAC,CAAA,AACjF,AAPyB,CAAA;SAQ3B,CAAC,AA7DA,CAAA;OA8DH;;;aAEiB,UAAS,CAAO;AAChC,YAAI,aAAa,KAAK,CAAC,CAAO,CAAC,CAAC;OACjC;;;aAEe,UAAS,CAAO;AAC9B,YAAI,aAAa,QAAQ,CAAC,UAAC,CAAI,EAAE,CAAC,EAAE,CAAW;AAC7C,AAAI,WAAI,KAAK,CAAO,IAClB,CAAW,OAAO,CAAC,CAAC,EAAE,CAAC,CAAC,AACzB,CAAA;SACF,CAAC,EACF,AAAI,AAA4B,CAAC,KAA7B,IAAI,YAAY,OAAO,AAAM,IAAI,AAA6B,CAAC,KAA9B,IAAI,aAAa,OAAO,AAAM,IACjE,IAAI,MAAM,EAAE,AACb,AAHC,CAAA;OAIH;;;aAEgB,UAAS,CAAO;AAC/B,YAAI,YAAY,KAAK,CAAC,CAAO,CAAC,CAAC;OAChC;;;aAEc,UAAS,CAAO;AAC7B,YAAI,YAAY,QAAQ,CAAC,UAAC,CAAI,EAAE,CAAC,EAAE,CAAU;AAC3C,AAAI,WAAI,KAAK,CAAO,IAClB,CAAU,OAAO,CAAC,CAAC,EAAE,CAAC,CAAC,AACxB,CAAA;SACF,CAAC,EACF,AAAI,AAA4B,CAAC,KAA7B,IAAI,YAAY,OAAO,AAAM,IAAI,AAA6B,CAAC,KAA9B,IAAI,aAAa,OAAO,AAAM,IACjE,IAAI,MAAM,EAAE,AACb,AAHC,CAAA;OAIH;;;aAEU,UAAC,CAAE,EAAW,CAAM,EAAW,CAAK,EAAW,CAAI,EAAW,CAAK;AAC5E,YAAI,CAAG,YAAA;YAAE,CAAQ,YAAA,CAAC;;AAClB;AACE,WAAQ,GAAG,IAAI,MAAM,CAAC,CAAI,CAAC,CAAC;UAE9B,OAAM,CAAG;AACP,WAAQ,GAAG;AAAE,qBAAQ,CAAI;WAAE,CAAC;SAC7B;;AACD,SAAG,GAAG;AACJ,mBAAS,CAAI;AACb,oBAAU;AAAC,kBAAK,cAAc;AAAC,gBAAG,CAAE;WAAC;SACtC,EACD,CAAQ,SAAS,GAAG,CAAG,SAAS,AAD/B,CAAA;;AAED,aAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,YAAY,OAAO,EAAE,CAAC,EAAE,EAC9C,AAAI,IAAI,YAAY,CAAC,CAAC,CAAC,SAAS,GAC9B,IAAI,YAAY,CAAC,CAAC,CAAC,KAAK,CAAC,CAAQ,CAAC,GAElC,IAAI,YAAY,CAAC,CAAC,CAAC,KAAK,CAAC,CAAG,CAAC,AAC9B,CAAA,AACF;;AACD,SAAG,IAAI,MAAM,CAAC,QAAQ,GAAG,CAAK,CAAC,CAAA;OAChC;;;aAEO;uCAAI,CAAI,gCAAJ,CAAI;;AACd,aAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,YAAY,OAAO,EAAE,CAAC,EAAE,EAAE;AAChD,cAAI,CAAO,GAAG,IAAI,YAAY,CAAC,CAAC,CAAC,CAAC;AAClC,WAAO,KAAK,MAAM,CAAC,CAAO,EAAE,CAAI,CAAC,CAAA;SAClC;;AACD,aAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,aAAa,OAAO,EAAE,CAAC,EAAE,EAAE;AACjD,cAAI,CAAO,GAAG,IAAI,aAAa,CAAC,CAAC,CAAC,CAAC;AACnC,WAAO,KAAK,MAAM,CAAC,CAAO,EAAE,CAAI,CAAC,CAAA;SAClC;OACF;;;aAEI;AACH,YAAI,QAAQ,GAAG,CAAA,CAAI,EACnB,IAAI,OAAO,MAAM,EAAE,EACnB,AAAI,IAAI,KAAK,IAAI,YAAY,CAAC,IAAI,KAAK,CAAC,AAAG,EAC3C,IAAI,mBAAmB,OAAO,CAAC,IAAI,CAAC,AAHjB,CAAA;OAIpB;;;aAEQ,UAAC,CAAI;AACZ;AAKE,iBAJA,AAAI,AAAC,AAAiB,QAAQ,IAAzB,OAAO,CAAI,AAAC,AAAa,IAAO,CAAI,YAAY,MAAM,AAAC,KAC1D,CAAI,GAAG,IAAI,UAAU,CAAC,CAAI,CAAC,CAAA,AAC5B,EACD,IAAI,OAAO,KAAK,CAAC,CAAI,CAAC,EACf,CAAA,CAAI,AAFV,CAEW;UACZ,OAAO,CAAG;AAEV,iBADA,CAAG,IAAI,MAAM,CAAC,CAAG,EAAE,CAAC,gCAAgC,EAAE;AAAE,iBAAK,CAAG;AAAE,wBAAY,IAAI,cAAc,WAAW;WAAC,CAAC,CAAC,EACvG,CAAA,CAAK,AADkG,CACjG;SACd;OACF;SAxMG,CAAiB;;MA2MjB,CAAkB;AACX,aADP,CAAkB;4BAAlB,CAAkB,GAEpB,IAAI,MAAM,GAAG,EAAE;KAChB;;wBAHG,CAAkB;;aAKnB,UAAC,CAAI;YAAE,CAAO,yDAAC,IAAI;AACpB,YAAI,CAAC,CAAI,cAAc,EACrB,MAAM,IAAI,KAAK,CAAC,CAAG,EAAE,CAAC,kCAAkC,CAAC,CAAC,CAAC,AAC5D;AACD,YAAI,CAAG,GAAG,CAAI,QAAQ,GAAG,GAAG,GAAG,CAAI,KAAK;YACpC,CAAQ,GAAG,IAAI,MAAM,CAAC,CAAG,CAAC,CADW;AAMzC,eAJA,AAAK,CAAQ,KACX,CAAQ,GAAG,IAAI,CAAiB,CAAC,CAAI,cAAc,EAAE,CAAI,QAAQ,EAAE,CAAI,KAAK,EAAE,IAAI,EAAE,CAAO,CAAC,EAC5F,IAAI,MAAM,CAAC,CAAG,CAAC,GAAG,CAAQ,CADkE,AAE7F,EACM,CAAQ,AADd,CACe;OACjB;;;aAEK,UAAC,CAAQ;AACb,YAAI,CAAG,GAAG,CAAQ,QAAQ,GAAG,GAAG,GAAG,CAAQ,KAAK,CAAC;AACjD,eAAO,IAAI,MAAM,CAAC,CAAG,CAAC,CAAA;OACvB;;;aAEI,UAAC,CAAM;;YACN,CAAM,GAAG,CAAM,GAAG,GAAG;YACrB,CAAI,GAAG,EAAE;;AACb,aAAK,IAAI,CAAG,IAAI,IAAI,MAAM,EACxB,AAAI,IAAI,MAAM,eAAe,CAAC,CAAG,CAAC,IAAI,AAAwB,CAAC,KAAzB,CAAG,QAAQ,CAAC,CAAM,CAAC,AAAM,IAC7D,CAAI,KAAK,CAAC,CAAG,CAAC,AACf,CAAA,AACF;;AACD,SAAI,QAAQ,CAAC,UAAA,CAAG;AACd,iBAAO,OAAU,CAAC,CAAG,CAAC,CAAC;SACxB,CAAC,CAAA;OACH;SAlCG,CAAkB;;MAoCpB,CAAkB,GAAG,IAAI,CAAkB,EAAE;MAE3C,CAAmB,GACZ,SADP,CAAmB,CACX,CAAC;0BADT,CAAmB,GAErB,CAAG,MAAM,WAAW,CAAC,IAAI,EAAC,CAAC,CAAC,EAC5B,IAAI,WAAW,GAAG,CAAC,WAAW,EAC9B,IAAI,UAAU,GAAG,CAAC,UAAU,EAC5B,IAAI,cAAc,GAAG,CAAC,cAAc,EACpC,IAAI,OAAO,GAAG,CAAC,OAAO,EACtB,CAAkB,MAAM,CAAC,CAAC,GAAG,CAAC,EAE9B,IAAI,QAAQ,GAAG,CAAC,QAAQ;AAExB,QAAI,CAAkB,GAAG,CAAG,SAAS,mBAAmB,CAAC;AACzD,AAAI,QAAI,QAAQ,IAAI,CAAkB,IAAI,CAAkB,sBAAsB,KAChF,AAAK,CAAkB,sBAAsB,CAAC,IAAI,WAAW,CAAC,IAC5D,CAAkB,aAAa,CAAC,CAAC,GAAG,EAAE,IAAI,EAAE,CAAkB,CAAC,CAChE,AACF,CAAA;GACF;;AAEH,GAAG,MAAM,aAAa,CAAC,mBAAmB,EAAE,CAAmB,CAAC,CAAA;;MAE1D,CAAe,GACR,SADP,CAAe,CACP,CAAC;;0BADT,CAAe,GAEjB,CAAG,MAAM,WAAW,CAAC,IAAI,EAAE,CAAC,CAAC,EAE7B,IAAI,QAAQ,GAAG,CAAC,QAAQ,EACxB,IAAI,cAAc,GAAG,CAAG,MAAM,QAAQ,CAAC,IAAI,QAAQ,CAAC,EACpD,IAAI,KAAK,GAAG,CAAC,KAAK,EAClB,IAAI,SAAS,GAAG,CAAC,SAAS,EAE1B,AAAI,IAAI,cAAc,IACpB,IAAI,eAAe,GAAG,CAAkB,IAAI,CAAC,IAAI,CAAC,EAClD,IAAI,eAAe,kBAAkB,CAAC,IAAI,CAAC,EAC3C,IAAI,GAAG,CAAC,QAAQ,EAAE;AAAQ,cAAW,CAAC;AAAC,cAAK,OAAO;AAAC,eAAM,KAAK;AAAC,cAAK,+BAA+B;OAAC,CAAC,CAAC;KAAE,CAAC,EAC1G,IAAI,GAAG,CAAC,MAAM,EAAG;AAAQ,cAAW,CAAC;AAAC,cAAK,KAAK;AAAC,eAAM,MAAM;AAAC,cAAK,2BAA2B;OAAC,CAAC,CAAC;KAAE,CAAC,EACpG,IAAI,GAAG,CAAC,QAAQ,EAAG;AAAQ,cAAW,CAAC;AAAC,cAAK,KAAK;AAAC,eAAM,MAAM;AAAC,cAAK,kCAAkC;OAAC,CAAC,CAAC;KAAE,CAAC,CAJ3D,GAMlD,IAAI,MAAM,CAAC,CAAG,EAAE,CAAC,kCAAkC,CAAC,CAAC,AACtD,EAED,IAAI,GAAG,CAAC,OAAO,EAAE;AACf,sBAAmB,gBAAgB,GAAM,CAAC;KAC3C,CAAC;GACH;;AAEH,GAAG,MAAM,aAAa,CAAC,wBAAwB,EAAE,CAAe,CAAC,CAAA;;MAE3D,CAAgB,GACT,SADP,CAAgB,CACR,CAAC;;0BADT,CAAgB,GAElB,CAAG,MAAM,WAAW,CAAC,IAAI,EAAE,CAAC,CAAC,EAE7B,IAAI,QAAQ,GAAG,CAAC,QAAQ,EACxB,IAAI,cAAc,GAAG,CAAG,MAAM,QAAQ,CAAC,IAAI,QAAQ,CAAC,EACpD,IAAI,KAAK,GAAG,CAAC,KAAK,EAClB,IAAI,SAAS,GAAG,CAAC,SAAS,EAE1B,AAAI,IAAI,cAAc,IACpB,IAAI,eAAe,GAAG,CAAkB,IAAI,CAAC,IAAI,CAAC,EAClD,IAAI,eAAe,mBAAmB,CAAC,IAAI,CAAC,EAC5C,IAAI,GAAG,CAAC,QAAQ,EAAE;AAAQ,cAAW,CAAC;AAAC,cAAK,OAAO;AAAC,eAAM,KAAK;AAAC,cAAK,+BAA+B;OAAC,CAAC,CAAC;KAAE,CAAC,EAC1G,IAAI,GAAG,CAAC,MAAM,EAAG;AAAQ,cAAW,CAAC;AAAC,cAAK,KAAK;AAAC,eAAM,MAAM;AAAC,cAAK,2BAA2B;OAAC,CAAC,CAAC;KAAE,CAAC,EACpG,IAAI,GAAG,CAAC,QAAQ,EAAG;AAAQ,cAAW,CAAC;AAAC,cAAK,KAAK;AAAC,eAAM,MAAM;AAAC,cAAK,kCAAkC;OAAC,CAAC,CAAC;KAAE,CAAC,CAJ3D,GAMlD,IAAI,MAAM,CAAC,CAAG,EAAE,CAAC,kCAAkC,CAAC,CAAC,AACtD,EAED,IAAI,GAAG,CAAC,OAAO,EAAE;AACf,sBAAmB,iBAAiB,GAAM,CAAC;KAC5C,CAAC,EAEF,IAAI,GAAG,CAAC,OAAO,EAAE,UAAA,CAAG;AAClB,UAAI,CAAO,YAAA,CAAC;AACZ,AAAI,gBAAa,IACf,OAAO,CAAG,SAAS,EACnB,CAAO,GAAG,IAAI,UAAU,CAAC,CAAG,CAAC,CADV,GAEd,AAAI,CAAG,eAAe,CAAC,SAAS,CAAC,KACtC,AAIE,CAAO,GAJT,AAAK,MAAM,SAAS,CAAC,CAAG,QAAQ,CAAC,GAIrB,CAAG,QAAQ,GAHX,CAAG,KAAK,aAAa,CAAC,CAAG,QAAQ,CAAC,AAI7C,CAAA,AACF,EACD,AAAI,CAAO,IACT,gBAAmB,UAAU,CAAC,CAAO,CAAC,AACvC,AAHA,CAAA;KAIF,CAAC;GACH;;AAEH,GAAG,MAAM,aAAa,CAAC,yBAAyB,EAAC,CAAgB,CAAC,CAAA;CACnE","file":"candy-egg-ws.js","sourcesContent":["'use strict';\n/**\n * Copyright 2013, 2015 IBM Corp.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n **/\n\nimport WebSocket from 'ws';\nimport urllib from 'url';\n\nconst TEST_SERVER_PING_TIMEOUT = false;\n\nexport default function(RED) {\n\n  class WebSocketListener {\n    constructor(accountConfig, account, path, webSocketListeners, options) {\n      this.accountConfig = accountConfig;\n      this.account = account;\n      this.path = path;\n      this.webSocketListeners = webSocketListeners;\n      this.server = null; // socket for server connection\n\n      this._inputNodes = [];  // collection of input nodes want to receive events\n      this._outputNodes = []; // node status event listeners\n      this.closing = false;\n      this.options = options || {};\n      this.redirect = 0;\n      this.authRetry = 0;\n      this.startconn(); // start outbound connection\n    }\n\n    startconn(url) {  // Connect to remote endpoint\n      let conf = this.accountConfig;\n      let prefix = 'ws' + (conf.secure ? 's' : '') + '://';\n      prefix += conf.loginUser + ':' + conf.loginPassword + '@';\n      let accountId = conf.accountFqn.split('@');\n      prefix += accountId[1];\n      let path = this.path;\n      if (url) {\n        let urlobj = urllib.parse(url);\n        if (!urlobj.host) {\n          path = urlobj.href;\n        } else {\n          prefix = urlobj.href;\n          path = null;\n        }\n      } else {\n        prefix += '/' + accountId[0] + '/api';\n      }\n\n      if (path && path.length > 0 && path.charAt(0) !== '/') {\n        prefix += '/';\n      }\n      if (path) {\n        prefix += path;\n      }\n      let socket = new WebSocket(prefix, this.options);\n      this.server = socket; // keep for closing\n      this.handleConnection(socket);\n    }\n\n    handleConnection(/*socket*/socket) {\n      let id = (1+Math.random()*4294967295).toString(16);\n      socket.on('open', () => {\n        this.emit2all('opened');\n        this.redirect = 0;\n        this.authRetry = 0;\n        socket.skipCloseEventHandler = false;\n      });\n      socket.on('close', () => {\n        if (socket.skipCloseEventHandler) {\n          return;\n        }\n        this.emit2all('closed');\n        if (!this.closing) {\n          // try to reconnect every 3+ secs\n          this.tout = setTimeout(() => { this.startconn(); }, 3000 + Math.random() * 1000);\n        }\n      });\n      socket.on('message', (data,flags) => {\n        this.handleEvent(id,socket,'message',data,flags);\n      });\n      if (TEST_SERVER_PING_TIMEOUT) {\n        socket.removeAllListeners('ping');\n      }\n      socket.on('ping', (data,flags) => {\n        this.emit2all('ping', data, flags);\n      });\n      socket.on('unexpected-response', (req, res) => {\n        this.emit2all('erro', req, res);\n        req.abort();\n        res.socket.end();\n        if (res.statusCode === 301 || res.statusCode === 302 || res.statusCode === 307) {\n          if (res.headers.location) {\n            if (this.redirect > 3) {\n              this.redirect = 0;\n              RED.log.error(RED._('candy-egg-ws.errors.too-many-redirects', { path: this.path, location: res.headers.location }));\n            } else {\n              ++this.redirect;\n              return this.startconn(res.headers.location);\n            }\n          }\n        } else if (res.statusCode === 404) {\n          RED.log.error(RED._('candy-egg-ws.errors.wrong-path', { path: this.path }));\n        } else if (res.statusCode === 401) {\n          RED.log.error(RED._('candy-egg-ws.errors.auth-error', { path: this.path, user: this.accountConfig.loginUser }));\n          ++this.authRetry;\n          if (this.authRetry > 10) {\n            return; // never retry\n          }\n          RED.log.info(RED._('candy-egg-ws.status.auth-retry'));\n        } else {\n          RED.log.error(RED._('candy-egg-ws.errors.server-error', { path: this.path, status: res.statusCode }));\n        }\n        // try to reconnect every approx. 1 min\n        socket.skipCloseEventHandler = true;\n        socket.close();\n        this.tout = setTimeout(() => { this.startconn(); }, 55000 + Math.random() * 10000);\n        this.redirect = 0;\n      });\n      socket.on('error', err => {\n        this.emit2all('erro', err);\n        RED.log.error(RED._('candy-egg-ws.errors.connect-error', { err: err, accountFqn: this.accountConfig.accountFqn}));\n        socket.skipCloseEventHandler = true;\n        socket.close();\n        if (!this.closing) {\n          // try to reconnect every 3+ secs\n          this.tout = setTimeout(() => { this.startconn(); }, 3000 + Math.random() * 1000);\n        }\n      });\n    }\n\n    registerOutputNode(/*Node*/handler) {\n      this._outputNodes.push(handler);\n    }\n\n    removeOutputNode(/*Node*/handler) {\n      this._outputNodes.forEach((node, i, outputNodes) => {\n        if (node === handler) {\n          outputNodes.splice(i, 1);\n        }\n      });\n      if (this._inputNodes.length === 0 && this._outputNodes.length === 0) {\n        this.close();\n      }\n    }\n\n    registerInputNode(/*Node*/handler) {\n      this._inputNodes.push(handler);\n    }\n\n    removeInputNode(/*Node*/handler) {\n      this._inputNodes.forEach((node, i, inputNodes) => {\n        if (node === handler) {\n          inputNodes.splice(i, 1);\n        }\n      });\n      if (this._inputNodes.length === 0 && this._outputNodes.length === 0) {\n        this.close();\n      }\n    }\n\n    handleEvent(id,/*socket*/socket,/*String*/event,/*Object*/data,/*Object*/flags) {\n      let msg, wholemsg;\n      try {\n        wholemsg = JSON.parse(data);\n      }\n      catch(err) {\n        wholemsg = { payload:data };\n      }\n      msg = {\n        payload: data,\n        _session: {type:'candy-egg-ws',id:id}\n      };\n      wholemsg._session = msg._session;\n      for (let i = 0; i < this._inputNodes.length; i++) {\n        if (this._inputNodes[i].wholemsg) {\n          this._inputNodes[i].send(wholemsg);\n        } else {\n          this._inputNodes[i].send(msg);\n        }\n      }\n      RED.log.debug('flags:' + flags);\n    }\n\n    emit2all(...args) {\n      for (let i = 0; i < this._inputNodes.length; i++) {\n        let thisArg = this._inputNodes[i];\n        thisArg.emit.apply(thisArg, args);\n      }\n      for (let i = 0; i < this._outputNodes.length; i++) {\n        let thisArg = this._outputNodes[i];\n        thisArg.emit.apply(thisArg, args);\n      }\n    }\n\n    close() {\n      this.closing = true;\n      this.server.close();\n      if (this.tout) { clearTimeout(this.tout); }\n      this.webSocketListeners.remove(this);\n    }\n\n    broadcast(data) {\n      try {\n        if ((typeof(data) === 'object') && !(data instanceof Buffer)) {\n          data = JSON.stringify(data);\n        }\n        this.server.send(data);\n        return true;\n      } catch (err) {\n        RED.log.error(RED._('candy-egg-ws.errors.send-error', { err: err, accountFqn: this.accountConfig.accountFqn}));\n        return false;\n      }\n    }\n  }\n\n  class WebSocketListeners {\n    constructor() {\n      this.store = {};\n    }\n\n    get(node, options=null) {\n      if (!node.accountConfig) {\n        throw new Error(RED._('candy-egg-ws.errors.missing-conf'));\n      }\n      let key = node.account + ':' + node.path;\n      let listener = this.store[key];\n      if (!listener) {\n        listener = new WebSocketListener(node.accountConfig, node.account, node.path, this, options);\n        this.store[key] = listener;\n      }\n      return listener;\n    }\n\n    remove(listener) {\n      let key = listener.account + ':' + listener.path;\n      delete this.store[key];\n    }\n\n    reset(nodeId) {\n      let prefix = nodeId + ':';\n      let keys = [];\n      for (let key in this.store) {\n        if (this.store.hasOwnProperty(key) && key.indexOf(prefix) === 0) {\n          keys.push(key);\n        }\n      }\n      keys.forEach(key => {\n        delete this.store[key];\n      });\n    }\n  }\n  let webSocketListeners = new WebSocketListeners();\n\n  class CANDYEggAccountNode {\n    constructor(n) {\n      RED.nodes.createNode(this,n);\n      this.accountFqn = n.accountFqn;\n      this.loginUser = n.loginUser;\n      this.loginPassword = n.loginPassword;\n      this.secure = n.secure;\n      webSocketListeners.reset(n.id);\n\n      this.managed = n.managed;\n      // deploying implicit API clients (candy-ws)\n      let deviceManagerStore = RED.settings.deviceManagerStore;\n      if (this.managed && deviceManagerStore && deviceManagerStore.isWsClientInitialized) {\n        if (!deviceManagerStore.isWsClientInitialized(this.accountFqn)) {\n          deviceManagerStore.initWsClient(n.id, this, webSocketListeners);\n        }\n      }\n    }\n  }\n  RED.nodes.registerType('CANDY EGG account', CANDYEggAccountNode);\n\n  class WebSocketInNode {\n    constructor(n) {\n      RED.nodes.createNode(this, n);\n\n      this.account = n.account;\n      this.accountConfig = RED.nodes.getNode(this.account);\n      this.path = n.path;\n      this.wholemsg = n.wholemsg;\n\n      if (this.accountConfig) {\n        this.listenerConfig = webSocketListeners.get(this);\n        this.listenerConfig.registerInputNode(this);\n        this.on('opened', () => { this.status({fill:'green',shape:'dot',text:'candy-egg-ws.status.connected'}); });\n        this.on('erro',  () => { this.status({fill:'red',shape:'ring',text:'candy-egg-ws.status.error'}); });\n        this.on('closed',  () => { this.status({fill:'red',shape:'ring',text:'candy-egg-ws.status.disconnected'}); });\n      } else {\n        this.error(RED._('candy-egg-ws.errors.missing-conf'));\n      }\n\n      this.on('close', () => {\n        this.listenerConfig.removeInputNode(this);\n      });\n    }\n  }\n  RED.nodes.registerType('CANDY EGG websocket in', WebSocketInNode);\n\n  class WebSocketOutNode {\n    constructor(n) {\n      RED.nodes.createNode(this, n);\n\n      this.account = n.account;\n      this.accountConfig = RED.nodes.getNode(this.account);\n      this.path = n.path;\n      this.wholemsg = n.wholemsg;\n\n      if (this.accountConfig) {\n        this.listenerConfig = webSocketListeners.get(this);\n        this.listenerConfig.registerOutputNode(this);\n        this.on('opened', () => { this.status({fill:'green',shape:'dot',text:'candy-egg-ws.status.connected'}); });\n        this.on('erro',  () => { this.status({fill:'red',shape:'ring',text:'candy-egg-ws.status.error'}); });\n        this.on('closed',  () => { this.status({fill:'red',shape:'ring',text:'candy-egg-ws.status.disconnected'}); });\n      } else {\n        this.error(RED._('candy-egg-ws.errors.missing-conf'));\n      }\n\n      this.on('close', () => {\n        this.listenerConfig.removeOutputNode(this);\n      });\n\n      this.on('input', msg => {\n        let payload;\n        if (this.wholemsg) {\n          delete msg._session;\n          payload = JSON.stringify(msg);\n        } else if (msg.hasOwnProperty('payload')) {\n          if (!Buffer.isBuffer(msg.payload)) { // if it's not a buffer make sure it's a string.\n            payload = RED.util.ensureString(msg.payload);\n          }\n          else {\n            payload = msg.payload;\n          }\n        }\n        if (payload) {\n          this.listenerConfig.broadcast(payload);\n        }\n      });\n    }\n  }\n  RED.nodes.registerType('CANDY EGG websocket out',WebSocketOutNode);\n}\n"]}