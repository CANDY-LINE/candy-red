{"version":3,"sources":["../../../src/nodes/local-node-candy-egg/candy-egg-httpreq.es6.js"],"names":[],"mappings":"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","file":"candy-egg-httpreq.js","sourcesContent":["'use strict';\n/**\n * Copyright 2013, 2015 IBM Corp.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n **/\n\nimport { http, https } from 'follow-redirects';\nimport urllib from 'url';\nimport mustache from 'mustache';\nimport querystring from 'querystring';\n\nexport default function(RED) {\n  class HTTPRequest {\n    constructor(n) {\n      RED.nodes.createNode(this,n);\n      this.path = n.path;\n      let isTemplatedPath = (this.path||'').indexOf('{{') !== -1;\n      let nodeMethod = n.method || 'GET';\n      this.ret = n.ret || 'obj';\n      let node = this;\n\n      node.account = n.account;\n      node.accountConfig = RED.nodes.getNode(node.account);\n\n      let prox, noprox;\n      ['http_proxy', 'HTTP_PROXY'].forEach(k => {\n        if (process.env[k]) { prox = process.env[k]; }\n      });\n      ['no_proxy', 'NO_PROXY'].forEach(k => {\n        if (process.env[k]) { noprox = process.env[k].split(','); }\n      });\n\n      this.on('input', msg => {\n        let preRequestTimestamp = process.hrtime();\n        node.status({fill:'blue',shape:'dot',text:'candy-box-httpreq.status.requesting'});\n        let conf = node.accountConfig;\n        let url = (conf.secure ? 'https' : 'http') + '://';\n        let accountId = conf.accountFqn.split('@');\n        url += accountId[1] + '/' + accountId[0] + '/api';\n\n        let path = msg.path || node.path;\n        if (msg.path && node.path && (msg.path !== node.path)) {   // warn if override option not set\n          node.warn(RED._('common.errors.nooverride'));\n        }\n        if (path && path.length > 0 && path.charAt(0) !== '/') {\n          url += '/';\n        }\n        if (path) {\n          if (isTemplatedPath) {\n            path = mustache.render(path, msg);\n          }\n          url += path;\n        }\n\n        let method = nodeMethod.toUpperCase() || 'GET';\n        if (msg.method && n.method && (n.method !== 'use')) {   // warn if override option not set\n          node.warn(RED._('common.errors.nooverride'));\n          method = msg.method.toUpperCase();      // use the msg parameter\n        }\n        let opts = urllib.parse(url);\n        opts.method = method;\n        opts.headers = {};\n        if (msg.headers) {\n          for (let v in msg.headers) {\n            if (msg.headers.hasOwnProperty(v)) {\n              let name = v.toLowerCase();\n              if (name !== 'content-type' && name !== 'content-length') {\n                // only normalise the known headers used later in this\n                // function. Otherwise leave them alone.\n                name = v;\n              }\n              opts.headers[name] = msg.headers[v];\n            }\n          }\n        }\n        opts.auth = conf.loginUser + ':' + conf.loginPassword;\n\n        let payload = null;\n        if (msg.payload && (method === 'POST' || method === 'PUT' || method === 'PATCH' ) ) {\n          if (typeof msg.payload === 'string' || Buffer.isBuffer(msg.payload)) {\n            payload = msg.payload;\n          } else if (typeof msg.payload === 'number') {\n            payload = msg.payload+'';\n          } else {\n            if (opts.headers['content-type'] === 'application/x-www-form-urlencoded') {\n              payload = querystring.stringify(msg.payload);\n            } else {\n              payload = JSON.stringify(msg.payload);\n              if (opts.headers['content-type'] === null) {\n                opts.headers['content-type'] = 'application/json';\n              }\n            }\n          }\n          if (opts.headers['content-length'] === null) {\n            if (Buffer.isBuffer(payload)) {\n              opts.headers['content-length'] = payload.length;\n            } else {\n              opts.headers['content-length'] = Buffer.byteLength(payload);\n            }\n          }\n        }\n        let urltotest = url;\n        let noproxy;\n        if (noprox) {\n          for (let i in noprox) {\n            if (url.indexOf(noprox[i]) !== -1) { noproxy=true; }\n          }\n        }\n        if (prox && !noproxy) {\n          let match = prox.match(/^(http:\\/\\/)?(.+)?:([0-9]+)?/i);\n          if (match) {\n            //opts.protocol = 'http:';\n            //opts.host = opts.hostname = match[2];\n            //opts.port = (match[3] !== null ? match[3] : 80);\n            opts.headers.Host = opts.host;\n            let heads = opts.headers;\n            let path = opts.pathname = opts.href;\n            opts = urllib.parse(prox);\n            opts.path = opts.pathname = path;\n            opts.headers = heads;\n            opts.method = method;\n            //console.log(opts);\n            urltotest = match[0];\n          }\n          else { node.warn('Bad proxy url: '+prox); }\n        }\n        let req = ((/^https/.test(urltotest))?https:http).request(opts, res => {\n          if (node.ret === 'bin') {\n            res.setEncoding('binary');\n          } else {\n            res.setEncoding('utf8');\n          }\n          msg.statusCode = res.statusCode;\n          msg.headers = res.headers;\n          msg.payload = '';\n          // msg.url = url;   // revert when warning above finally removed\n          res.on('data', chunk => {\n            msg.payload += chunk;\n          });\n          res.on('end', () => {\n            if (node.metric()) {\n              // Calculate request time\n              let diff = process.hrtime(preRequestTimestamp);\n              let ms = diff[0] * 1e3 + diff[1] * 1e-6;\n              let metricRequestDurationMillis = ms.toFixed(3);\n              node.metric('duration.millis', msg, metricRequestDurationMillis);\n              if (res.client && res.client.bytesRead) {\n                node.metric('size.bytes', msg, res.client.bytesRead);\n              }\n            }\n            if (node.ret === 'bin') {\n              msg.payload = new Buffer(msg.payload,'binary');\n            }\n            else if (node.ret === 'obj') {\n              try { msg.payload = JSON.parse(msg.payload); }\n              catch(e) { node.warn(RED._('candy-box-httpreq.errors.json-error')); }\n            }\n            node.send(msg);\n            node.status({});\n          });\n        });\n        req.on('error', err => {\n          msg.payload = err.toString() + ' : ' + url;\n          msg.statusCode = err.code;\n          node.send(msg);\n          node.status({fill:'red',shape:'ring',text:err.code});\n        });\n        if (payload) {\n          req.write(payload);\n        }\n        req.end();\n      });\n    }\n  }\n\n  RED.nodes.registerType('CANDY EGG http request',HTTPRequest);\n}\n"]}