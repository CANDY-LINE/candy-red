{"version":3,"sources":["../../../src/nodes/local-node-enocean/enocean.es6.js"],"names":[],"mappings":"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","file":"enocean.js","sourcesContent":["'use strict';\n/*\n * EnOcean Serial Node for Packet Type 10: RADIO_ERP2\n * Supported Protocols (Partially):\n * - EnOcean Serial Protocol 3 (ESP3) V1.27 / July 30, 2014\n * - EnOcean Radio Protocol 2 SPECIFICATION V1.0 September 26, 2013\n *\n * This node expects 'node-red-node-serialport' to be available\n * on the editor in order to use its `/serialports` endpoint.\n */\n\nimport { SerialPool } from './lib/enocean';\nimport { ERP2_HANDLERS } from './lib/eep_handlers';\n\nexport default function(RED) {\n  function EnOceanPortNode(n) {\n    RED.nodes.createNode(this, n);\n    let that = this;\n    try {\n      that.serialPort = n.serialPort;\n      EnOceanPortNode.pool.add(that);\n    } catch (e) {\n      RED.log.warn(RED._('enocean.errors.serialPortError', { error: e }));\n    }\n  }\n  EnOceanPortNode.pool = new SerialPool(RED);\n  RED.nodes.registerType('EnOcean Port', EnOceanPortNode);\n\n  function EnOceanInNode(n) {\n    RED.nodes.createNode(this, n);\n    let that = this;\n    that.name = n.name;\n    that.originatorId = n.originatorId;\n    that.eepType = n.eepType;\n    that.addEepType = n.addEepType;\n    that.useString = n.useString;\n    that.enoceanPortNodeId = n.enoceanPort;\n    that.enoceanPortNode = RED.nodes.getNode(that.enoceanPortNodeId);\n    that.on('close', done => {\n      if (that.enoceanPortNode) {\n        EnOceanPortNode.pool.close(that.enoceanPortNode.serialPort).then(() => {\n          done();\n        });\n      } else {\n        done();\n      }\n    });\n    try {\n      let enocean = EnOceanPortNode.pool.get(that.enoceanPortNode.serialPort);\n      enocean.port.on(`ctx-${that.originatorId}`, ctx => {\n        let handleIt = ERP2_HANDLERS[that.eepType];\n        if (!handleIt) {\n          RED.log.warn(RED._('enocean.warn.noHandler', { eepType: that.eepType }));\n          return;\n        }\n        let payload = handleIt(ctx);\n        payload.tstamp = Date.now();\n        payload.rssi = ctx.container.dBm;\n        payload.id = ctx.originatorId;\n        if (that.addEepType) {\n          payload.eep = that.eepType;\n        }\n        if (that.useString) {\n          payload = JSON.stringify(payload);\n        }\n        that.send({ payload: payload });\n      });\n      enocean.port.on('ready', () => {\n        that.status({ fill: 'green', shape: 'dot', text: 'node-red:common.status.connected'});\n      });\n      enocean.port.on('closed', () => {\n        that.status({ fill: 'red', shape: 'ring', text: 'node-red:common.status.not-connected'});\n      });\n    } catch (e) {\n      RED.log.warn(RED._('enocean.errors.serialPortError', { error: e }));\n    }\n  }\n  RED.nodes.registerType('EnOcean in', EnOceanInNode);\n\n  RED.httpAdmin.get('/eeps', RED.auth.needsPermission('eep.read'), function(req,res) {\n    res.json(Object.keys(ERP2_HANDLERS));\n  });\n\n}\n"]}