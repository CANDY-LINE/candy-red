{"version":3,"sources":["../../../../src/nodes/local-node-enocean/lib/eep_handlers.es6.js"],"names":[],"mappings":";;;AAOO,IAAM,aAAa,GAAG;AAE3B,cAAa,UAAS,CAAG;AACvB,QAAI,CAAI,GAAG;AACT,WAAK,CAAA,CAAK;AACV,UAAI,IAAI;AACR,UAAI,IAAI;KACT;QACG,CAAK,GAAG,CAAG,OAAO,CAAC,CAAC,CAAC,CADvB;AAeF,WAbA,AAAI,AAAQ,GAAI,GAAZ,CAAK,AAAO,KACd,CAAI,IAAI,GAAG,CAAA,CAAI,CAAA,AAChB,EACD,AAAI,AAAQ,CAAI,GAAZ,CAAK,AAAO,GACd,CAAI,GAAG,GAAG,GAAG,GACR,AAAI,AAAQ,CAAI,GAAZ,CAAK,AAAO,KACrB,CAAI,GAAG,GAAG,GAAG,CAAA,AACd,EACD,AAAI,AAAQ,CAAI,GAAZ,CAAK,AAAO,GACd,CAAI,GAAG,GAAG,GAAG,GACR,AAAI,AAAQ,CAAI,GAAZ,CAAK,AAAO,KACrB,CAAI,GAAG,GAAG,GAAG,CAAA,AACd,EACM,CAAI,AAXV,CAWW;GACb;AACD,cAAa,UAAS,CAAG;AACvB,QAAI,CAAI,GAAG;AACT,WAAK,CAAA,CAAK;AACV,UAAI,CAAA,CAAK;KACV;QACG,CAAK,GAAG,CAAG,OAAO,CAAC,CAAC,CAAC,CADvB;AAQF,WANA,AAAI,AAAQ,CAAI,GAAZ,CAAK,AAAO,KACd,CAAI,IAAI,GAAG,CAAA,CAAI,CAAA,AAChB,EACD,AAAI,AAAQ,CAAI,GAAZ,CAAK,AAAO,KACd,CAAI,GAAG,GAAG,CAAA,CAAI,CAAA,AACf,EACM,CAAI,AAJV,CAIW;GACb;CACF,CAAC","file":"eep_handlers.js","sourcesContent":["'use strict';\n/*jshint bitwise: false*/\n\n/*\n * EEP payload handler collection\n */\n\nexport const ERP2_HANDLERS = {\n  // key = 'OBRG-FUNC-TYPE' (lower cases), value = function(ctx)\n  'f6-02-04' : function(ctx) {\n    let data = {\n      ebo: false, // State of the energy bow, false for released, true for pressed\n      rb: null,   // State of the rocker B, I for state I being pressed, 0 for state 0 being pressed\n      ra: null    // State of the rocker A, I for state I being pressed, 0 for state 0 being pressed\n    };\n    let state = ctx.dataDl[0];\n    if (state & 0x80) {\n      data.ebo = true;\n    }\n    if (state & 0x08) {\n      data.rb = 'I';\n    } else if (state & 0x04) {\n      data.rb = '0';\n    }\n    if (state & 0x02) {\n      data.ra = 'I';\n    } else if (state & 0x01) {\n      data.ra = '0';\n    }\n    return data;\n  },\n  'd5-00-01' : function(ctx) {\n    let data = {\n      lrn: false, // false for pressed, true for not pressed\n      co: false   // false for open, true for closed\n    };\n    let state = ctx.dataDl[0];\n    if (state & 0x08) {\n      data.lrn = true;\n    }\n    if (state & 0x01) {\n      data.co = true;\n    }\n    return data;\n  }\n};\n"]}