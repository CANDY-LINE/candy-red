{"version":3,"sources":["../src/device-manager.es6.js"],"names":[],"mappings":"AAAA,aAAa;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;QAEN,6BAA6B;;kBACrB,IAAI;;kBACJ,IAAI;;wBACE,UAAU;;sBACF,QAAQ;2BACjB,cAAc;;6BAChB,eAAe;;sBACd,QAAQ;;oBACV,MAAM;;wBACG,UAAU;IAAxB,QAAQ;uBACJ,UAAU;;IAEpB,eAAe,GAAG,IAAI;IACtB,KAAK,GAAG,OAAO,IAAI,MAAM,IAAI,CAAA,CAAK;IAElC,oBAAoB,GAAG,wBAAwB;IAC/C,iBAAiB,GAAG,eAAe;IAE5B,gBAAgB;AAChB,WADA,CAAgB;0BAAhB,CAAgB,GAEzB,IAAI,mBAAmB,GAAG,EAAE,EAC5B,IAAI,cAAc,GAAG,CAAA,CAAK;GAC3B;;sBAJU,CAAgB;;WAMpB;;AACL,aAAO,6BAAY,UAAC,CAAO,EAAE,CAAM;AACjC,eAAO,kBAAqB,CAAC,CAAO,EAAE,CAAM,CAAC,CAAC;OAC/C,CAAC,CAAC;KACJ;;;WAEe,UAAC,CAAO,EAAE,CAAM;AAG9B,aAAO,IAAI,eAAe,CAAC,CAAO,EAAE,CAAM,CAAC,CAAC;KAC7C;;;WAEa,UAAC,CAAO,EAAE,CAAM;;;AAE5B,0BAAO,CAAC,oBAAoB,EAAE,UAAA,CAAG;AAC/B,eAAA,AAAI,CAAG,GACE,eAAkB,CAAC,CAAO,EAAE,CAAM,CAAC,GAE5C,KAAA,oBAAO,CAAC,oBAAoB,EAAE,UAAC,CAAG,EAAE,CAAI;AACtC,iBAAA,AAAI,CAAG,GACE,CAAM,CAAC,CAAG,CAAC,GAEpB,KAAA,CAAO,CAAC,MAAM,GAAG,CAAI,CAAC,AADrB,CAAA;SAEF,CAAC,AAND,CAAA;OAOF,CAAC,CAAA;KACH;;;WAEY,UAAC,CAAO,EAAE,CAAM;AAG3B,aAAO,IAAI,YAAY,CAAC,CAAO,EAAE,CAAM,CAAC,CAAC;KAC1C;;;WAEU,UAAC,CAAO,EAAE,CAAM;;;AAEzB,0BAAO,CAAC,iBAAiB,EAAE,UAAA,CAAG;AAC5B,YAAI,CAAG,EACL,OAAO,aAAgB,CAAC,CAAO,EAAE,CAAM,CAAC,CAAC,AAC1C;;AACD,YAAI,CAAM,GAAG,qCAAwB,CAAC;AACpC,oBAAU,CAAA,CAAK;AACf,iBAAO,gCAAmB,CAAC,iBAAiB,CAAC;SAC9C,CAAC;YACE,CAAE,GAAG,EAAE,CADR;;AAEH,SAAM,GAAG,CAAC,MAAM,EAAE,UAAA,CAAI;AACpB,AAAI,WAAI,QAAQ,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAI,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,KACvD,CAAE,GAAG,CAAI,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,KAAK,EAAE,CAAA,AAC/B,CAAA;SACF,CAAC,EACF,CAAM,GAAG,CAAC,OAAO,EAAE,UAAA,CAAG;AACpB,iBAAA,AAAI,CAAG,IAAI,CAAC,CAAE,GACL,aAAgB,CAAC,CAAO,EAAE,CAAM,CAAC,GAE1C,KAAA,CAAO,CAAC,MAAM,GAAG,CAAE,CAAC,AADnB,CAAA;SAEF,CAAC,AANA,CAAA;OAOH,CAAC,CAAA;KACH;;;WAEU,UAAC,CAAO,EAAE,CAAM;AACzB,UAAI,CAAG,GAAG,iCAAoB,EAAE,CAAC;;AACjC,WAAK,IAAI,CAAG,IAAI,CAAG,EACjB,IAAI,CAAG,eAAe,CAAC,CAAG,CAAC,EACzB,KAAK,IAAI,CAAC,IAAI,CAAG,CAAC,CAAG,CAAC,EAAE;AACtB,YAAI,CAAG,GAAG,CAAG,CAAC,CAAG,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;AAC1B,YAAI,CAAG,IAAI,AAAQ,mBAAmB,KAA3B,CAAG,AAAwB,EACpC,OAAO,CAAO,CAAC,MAAM,GAAG,CAAG,GAAG,GAAG,GAAG,CAAG,QAAQ,CAAC,IAAI,MAAM,CAAC,GAAG,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,YAAY,EAAE,CAAC,CAAC,AAC3F;OACF,AACF,AACF;;AACD,OAAM,CAAC,IAAI,KAAK,CAAC,gBAAgB,CAAC,CAAC,CAAA;KACpC;OA7EU,CAAgB;;;;;IAgFhB,aAAa;AACb,WADA,CAAa,CACZ,CAAO,EAAE,CAAc,EAAE,CAAa,EAAE,CAAW;;AAC7D,+BAFS,CAAa,GAElB,CAAC,CAAa,GAChB,MAAM,IAAI,KAAK,CAAC,2BAA2B,CAAC,CAAC,AAC9C;AACD,QAAI,QAAQ,GAAG,CAAO,EACtB,IAAI,eAAe,GAAG,CAAc,EACpC,IAAI,cAAc,GAAG,CAAa,EAClC,IAAI,YAAY,GAAG,CAAW,EAC9B,IAAI,OAAO,GAAG,+BAA+B,GAAG,CAAa,WAAW,GAAG,IAAI,EAC/E,IAAI,SAAS,GAAG,EAAE,EAClB,IAAI,OAAO,GAAG,0BAAkB,EAChC,IAAI,OAAO,GAAG,CAAC,QAAQ,EAAE;AACvB,aAAU,CAAC,WAAW,CAAC,EACvB,SAAY,EAAE,KAAK,CAAC,UAAA,CAAK;AACvB,AAAK,SAAK,IACR,OAAU,CAAC,yBAAyB,CAAC,AACtC,CAAA;OACF,CAAC,SAAM,CAAC,UAAA,CAAG;AACV,gBAAW,CAAC,CAAG,MAAM,CAAC,CAAC;OACxB,CAAC,AAPqB,CAAA;KAQxB,CAAC,EACF,IAAI,OAAO,GAAG,CAAC,QAAQ,EAAE;AACvB,aAAU,CAAC,cAAc,CAAC,EAC1B,QAAW,EAAE,AADa,CAAA;KAE3B,CAAC,EACF,IAAI,OAAO,GAAG,CAAC,MAAM,EAAE,UAAC,CAAI,EAAE,CAAI;AAChC,AAAI,OAAI,GACN,OAAU,CAAC,mBAAmB,IAAI,CAAI,OAAO,GAAG,IAAI,GAAG,CAAI,OAAO,GAAG,EAAE,CAAA,AAAC,CAAC,GAEzE,OAAU,CAAC,kBAAkB,CAAC,AAC/B,EACD,QAAW,EAAE,AADZ,CAAA;KAEF,CAAC,EACF,IAAI,OAAO,GAAG,CAAC,MAAM,EAAE;AACrB,AAAI,wBAAqB,IACvB,YAAY,CAAC,kBAAqB,CAAC,AACpC,EACD,kBAAqB,GAAG,UAAU,CAAC;AACjC,eAAU,sCAAoC,AAA0B,GAAG,GAA7B,oBAAuB,AAAM,GAAG,IAAI,cAAW,EAC7F,QAAW,EAAE,EACb,gBAAmB,OAAO,MAAM,EAAE,AAF2D,CAAA;OAG9F,EAAE,AAA0B,GAAG,GAA7B,oBAAuB,AAAM,CAAC,AALhC,CAAA;KAMF,CAAC,EAEF,IAAI,OAAO,KAAK,GAAG,UAAA,CAAG;AACpB,UAAI,CAAO,GAAG,CAAG,QAAQ,CAAC;AAC1B,UAAI,CAAO,EACT;AACE,SAAO,GAAG,IAAI,MAAM,CAAC,CAAO,CAAC,CAAC;QAC9B,OAAO,CAAC,IACT,AACF;;AAID,WAHA,AAAI,KAAK,IACP,OAAU,CAAC,YAAY,GAAG,IAAI,UAAU,CAAC,CAAO,CAAC,CAAC,AACnD,EACG,CAAC,UAAa,CADjB,EACmB;AAClB,YAAI,AAAC,CAAA,CAAO,IAAK,CAAA,CAAO,OAAO,IAAI,AAAqC,CAAC,KAAtC,IAAI,MAAM,CAAC,CAAO,OAAO,GAAG,GAAG,CAAC,AAAM,EAMvE,OAJA,gBAAmB,MAAM,EAAE,EAC3B,KAAA,QAAW,CAAC,qEAC0C,GACpD,CAAa,WAAW,CAAC,AAHA,CAIpB,AAIR;AAFC,SAAO,GAAG,CAAO,SAAS,EAC1B,UAAa,GAAG,CAAA,CAAI,AADM,CAAA;OAG7B;;AACD,wBAAqB,CAAC,CAAO,CAAC,KAAK,CAAC,UAAA,CAAM;AACxC,uBAAkB,CAAC,CAAM,CAAC,CAAC;OAC5B,CAAC,SAAM,CAAC,UAAA,CAAM;AACb,YAAI,CAAM,YAAY,KAAK,EAAE;AAC3B,cAAI,CAAG,GAAG,CAAM,CAAC;AACjB,WAAM,GAAG,EAAE,EACX,CAAM,OAAO,GAAG,GAAG,EACnB,CAAM,QAAQ,GAAG,CAAG,SAAS,EAAE,EAC/B,CAAM,MAAM,GAAG,CAAG,MAAM,AAHb,CAAA;SAIZ,MAAM,AAAI,CAAM,IAAI,CAAC,KAAK,QAAQ,CAAC,CAAM,CAAC,KACzC,CAAM,GAAG,CAAC,CAAM,CAAC,CAAA,AAClB,CAAA;;AACD,uBAAkB,CAAC,CAAM,CAAC,CAAA;OAC3B,CAAC,SAAM,CAAC,UAAA,CAAG;AACV,gBAAW,CAAC,CAAG,MAAM,CAAC,CAAC;OACxB,CAAC,CAAA;KACH,EACD,IAAI,eAAe,kBAAkB,CAAC,IAAI,OAAO,CAAC,EAClD,IAAI,eAAe,KAAK,GAAG,UAAA,CAAO;AAIhC,aAHA,AAAI,AAAC,AAAoB,QAAQ,IAA5B,OAAO,CAAO,AAAC,AAAa,IAAO,CAAO,YAAY,MAAM,AAAC,KAChE,CAAO,GAAG,IAAI,UAAU,CAAC,CAAO,CAAC,CAAA,AAClC,EACM,gBAAmB,UAAU,CAAC,CAAO,CAAC,AAD5C,CAC6C;KAC/C,EACD,IAAI,OAAO,EAAE,AAxFS,CAAA;GAyFvB;;sBA9FU,CAAa;;WAgGnB,UAAC,CAAG;AACP,8BAAO,KAAK,CAAC,IAAI,OAAO,GAAI,CAAG,CAAC,CAAC;KAClC;;;WACI,UAAC,CAAG;AACP,8BAAO,KAAK,CAAC,IAAI,OAAO,GAAI,CAAG,CAAC,CAAC;KAClC;;;WACK,UAAC,CAAG;AACR,8BAAO,MAAM,CAAC,IAAI,OAAO,GAAI,CAAG,CAAC,CAAC;KACnC;;;WAEM;;UACD,CAAO,GAAG,IAAI,SAAS;AAC3B,aAAA,AAAI,AAAmB,CAAC,KAApB,CAAO,OAAO,AAAM,GACf,6BAAY,UAAA,CAAO;eAAI,CAAO,CAAC,CAAA,CAAI,CAAC;OAAA,CAAC,IAE9C,IAAI,SAAS,GAAG,EAAE,EAClB,CAAO,GAAG,CAAO,IAAI,CAAC,UAAA,CAAC;AACrB,eAAO,SAAY,CAAC,CAAC,CAAC,CAAC;OACxB,CAAC,EACK,4BAAW,CAAC,CAAO,CAAC,CAJT,AADjB,CAAA;KAMF;;;WAEO,UAAC,CAAQ;AACf,AAAI,OAAQ,IACV,IAAI,SAAS,KAAK,CAAC,CAAQ,CAAC,AAC7B,CAAA;KACF;;;WAEK;AACJ,UAAI,OAAO,GAAG,CAAC,EACf,IAAI,SAAS,GAAG,EAAE,EAClB,IAAI,SAAS,GAAG,CAAA,CAAK,EACrB,AAAI,IAAI,iBAAiB,KACvB,YAAY,CAAC,IAAI,iBAAiB,CAAC,EACnC,OAAO,IAAI,iBAAiB,CADO,AAEpC,AANc,CAAA;KAOhB;;;WAEM,UAAC,CAAQ;AACd,aAAO,IAAI,cAAc,CAAC,CAAQ,CAAC,CAAC;KACrC;;;WASY,UAAC,CAAM;;AAClB,aAAO,6BAAY,UAAA,CAAO;AACxB,YAAI,CAAC,CAAM,IAAI,KAAK,QAAQ,CAAC,CAAM,CAAC,IAAI,AAAkB,CAAC,KAAnB,CAAM,OAAO,AAAM,IAAI,AAAwB,CAAC,KAAzB,MAAM,KAAK,CAAC,CAAM,CAAC,AAAM,EAGtF,OADA,OAAU,CAAC,2BAA2B,CAAC,EAChC,CAAO,EAAE,AADuB,CACtB,AAClB;AACD,SAAM,GAAG,yBAA4B,CAAC,CAAM,CAAC,CAAA;AAC7C,YAAI,CAAI,GAAG,gBAAmB,KAAK,CAAC,CAAM,CAAC,CAAC;AAI5C,eAHA,AAAI,KAAK,IAAI,CAAI,IACf,OAAU,CAAC,QAAQ,GAAG,IAAI,UAAU,CAAC,CAAM,CAAC,CAAC,AAC9C,EACD,AAAK,CAAI,IAKT,AAAK,KAAK,QAAQ,CAAC,CAAM,CAAC,KACxB,CAAM,GAAG,CAAC,CAAM,CAAC,CAAA,AAClB,EACD,AAAI,CAAM,OAAO,CAAC,UAAC,CAAC,EAAE,CAAC;AACrB,iBAAO,CAAC,IAAK,CAAC,IAAI,CAAC,QAAQ,AAAC,CAAC;SAC9B,EAAE,CAAA,CAAK,CAAC,KACP,OAAU,CAAC,2BAA2B,CAAC,EACvC,CAAa,QAAQ,EAAE,CADgB,AAExC,EACD,KAAA,CAAO,EAAE,CAPR,IANC,OAAU,CAAC,mDAAmD,CAAC,EAC/D,UAAa,CAAC,CAAM,CAAC,EACd,CAAO,EAAE,CAF+C,AAGhE,AALA,CAKA;OAWF,CAAC,CAAC;KACJ;;;WAEU;AAET,aADA,IAAI,OAAO,GAAG,CAAC,IAAI,OAAO,GAAG,CAAC,CAAA,GAAI,KAAK,EAChC,IAAI,OAAO,AADqB,CACpB;KACpB;;;WAEsB,UAAC,CAAM;;UACxB,CAAS,GAAG,CAAM;AAWtB,aAVA,AAAK,KAAK,QAAQ,CAAC,CAAM,CAAC,KACxB,CAAS,GAAG,CAAC,CAAM,CAAC,CAAA,AACrB,EACD,CAAS,QAAQ,CAAC,UAAA,CAAC;AACjB,AAAI,SAAC,SAAS,GACZ,wBAA2B,CAAC,CAAC,SAAS,CAAC,GAEvC,wBAA2B,CAAC,CAAC,CAAC,AAC/B,CAAA;OACF,CAAC,EACK,CAAM,AARZ,CAQa;KACf;;;WAEqB,UAAC,CAAQ;;UACzB,CAAS,GAAG,CAAQ;AAqBxB,aApBA,AAAK,KAAK,QAAQ,CAAC,CAAQ,CAAC,KAC1B,CAAS,GAAG,CAAC,CAAQ,CAAC,CAAA,AACvB,EACD,CAAS,QAAQ,CAAC,UAAA,CAAC;AACjB,AAAK,SAAC,GAAG,KACP,CAAC,GAAG,GAAG,aAAgB,EAAE,CAAA,AAC1B,EACD,UAAa,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,EACvB,AAAI,CAAC,KAAK,KAER,AAAK,MAAS,KACZ,MAAS,GAAG,EAAE,CAAA,AACf,EACD,MAAS,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,KAAK,EACxB,OAAO,CAAC,KAAK,CAFZ,AAGF,EACD,AAAI,AAAU,MAAM,KAAhB,CAAC,IAAI,AAAW,IAAK,AAAU,UAAU,KAApB,CAAC,IAAI,AAAe,IAAI,AAAU,UAAU,KAApB,CAAC,IAAI,AAAe,AAAC,IACpE,wBAA2B,CAAC,CAAC,KAAK,CAAC,AACpC,AAZA,CAAA;OAaF,CAAC,EACK,CAAQ,AAlBd,CAkBe;KACjB;;;WAEe,UAAC,CAAQ;;AACvB,UAAI,CAAC,CAAQ,EACX,OAAO,6BAAY,UAAA,CAAO;eAAI,CAAO,EAAE;OAAA,CAAC,CAAC,AAC1C;;AAED,UAAI,KAAK,QAAQ,CAAC,CAAQ,CAAC,EAAE;AAE3B,YAAI,CAAQ,GAAG,CAAQ,IAAI,CAAC,UAAA,CAAC;AAC3B,iBAAO,kBAAqB,CAAC,CAAC,CAAC,CAAC;SACjC,CAAC,CAAC;AACH,eAAO,4BAAW,CAAC,CAAQ,CAAC,KAAK,CAAC,UAAA,CAAW;AAC3C,cAAI,CAAM,GAAG,CAAW,OAAO,CAAC,UAAC,CAAC,EAAE,CAAC;AACnC,mBAAA,AAAI,CAAC,IAAI,CAAC,GACD,CAAC,OAAO,CAAC,CAAC,CAAC,GACb,AAAK,CAAC,GAGN,CAAC,GAFC,CAAC,AACT,CAAA;WAEF,EAAE,EAAE,CAAC,CAAC;AACP,iBAAO,6BAAY,UAAA,CAAO;mBAAI,CAAO,CAAC,CAAM,CAAC;WAAA,CAAC,CAAC;SAChD,CAAC,CAAC;OACJ;;AAED,UAAI,CAAQ,OAAO,EAAE;AAEnB,YAAI,CAAQ,GAAG,EAAE;AACf,cAAI,CAAC,GAAG,IAAI,SAAS,CAAC,CAAQ,GAAG,CAAC,CAAC;;AACnC,cAAI,CAAC,EAAE;AACL,gBAAI,CAAI,YAAA,CAAC;;AAIT,iBAHA,AAAI,IAAI,KAAK,IAAI,IAAI,KAAK,CAAC,CAAQ,GAAG,CAAC,KACrC,CAAI,GAAG,IAAI,KAAK,CAAC,CAAQ,GAAG,CAAC,CAAA,AAC9B,EACG,AAAsC,CAAC,KAAvC,IAAI,MAAM,CAAC,CAAQ,OAAO,GAAG,GAAG,CAAC,AAAM,CAD1C,EAC4C;AAC3C,sCAAO,KAAK,gCAA8B,IAAI,UAAU,CAAC,CAAC,CAAC,iBAAY,IAAI,UAAU,CAAC,CAAQ,CAAC,CAAG,CAAA;;AAClG;AACE,iBAAI,CAAC,CAAQ,OAAO,CAAC,CAAC;gBACtB,OAAO,CAAC,IACT;aACF,MAAM,IAAI,CAAI,EACb;AACE,eAAI,EAAE,CAAC;cACP,OAAO,CAAC,IACT,AACF;;AACD,AAAI,aAAI,IACN,OAAO,IAAI,KAAK,CAAC,CAAQ,GAAG,CAAC,AAC9B,EACD,OAAO,IAAI,SAAS,CAAC,CAAQ,GAAG,CAAC,AADhC,CAAA;WAEF;SACF;;AACD,eAAA,AAAI,CAAQ,SAAS,GACZ,IAAI,iBAAiB,CAAC,CAAQ,SAAS,CAAC,IAEjD,AAAI,AAAsC,CAAC,KAAvC,IAAI,MAAM,CAAC,CAAQ,OAAO,GAAG,GAAG,CAAC,AAAM,IACzC,IAAI,MAAM,qCAAmC,IAAI,UAAU,CAAC,CAAQ,CAAC,CAAG,AACzE,EACM,6BAAY,UAAA,CAAO;iBAAI,CAAO,EAAE;SAAA,CAAC,CADvC,AAHA,CAAA;OAKF;;AAED,UAAI,CAAC,CAAQ,GAAG,EACd,OAAO,6BAAY,UAAA,CAAO;eAAI,CAAO,CAAC;AAAE,kBAAQ,GAAG;AAAE,mBAAS,YAAY;SAAE,CAAC;OAAA,CAAC,CAAC,AAChF;AACD,UAAI,CAAC,CAAQ,IAAI,EACf,OAAO,6BAAY,UAAA,CAAO;eAAI,CAAO,CAAC;AAAE,kBAAQ,GAAG;AAAE,mBAAS,kBAAkB;SAAE,CAAC;OAAA,CAAC,CAAC,AACtF;;AAED,UAAI,AAAiB,MAAM,KAAvB,CAAQ,IAAI,AAAW,EAAE;AAC3B,YAAI,CAAQ,GAAG,CAAQ,KAAK,IAAI,EAAE,CAAC;AACnC,AAAK,aAAK,QAAQ,CAAC,CAAQ,CAAC,KAC1B,CAAQ,GAAG,CAAC,CAAQ,CAAC,CAAA,AACtB,CAAA;AACD,YAAI,CAAQ,YAAA,CAAC;;AACb,gBAAO,CAAQ,IAAI;AACnB,eAAK,UAAU;AAkBb,mBAjBA,CAAQ,GAAG,CAAQ,OAAO,CAAC,UAAC,CAAC,EAAE,CAAC;AAC9B,kBAAI,CAAC,CAAC,EACJ,OAAO,CAAC,CAAC,AACV;AACD,kBAAI,CAAI,GAAG,CAAC,KAAK,CAAC,UAAA,CAAM;AACtB,uBAAO,iBAAoB,CAAC,CAAC,EAAE,CAAM,CAAC,CAAC;eACxC,CAAC,CAAC;AACH,qBAAO,CAAI,CAAC;aACb,EAAE,6BAAY,UAAA,CAAO;qBAAI,CAAO,EAAE;aAAA,CAAC,CAAC,KAAK,CAAC,UAAA,CAAM;AAC/C,qBAAO,6BAAY,UAAA,CAAO;AACxB,uBAAA,AAAI,CAAM,IACR,CAAM,KAAK,CAAC;AAAE,0BAAQ,GAAG;AAAE,sBAAI,CAAQ,GAAG;iBAAE,CAAC,EACtC,CAAO,CAAC,CAAM,CAAC,CADuB,GAGxC,CAAO,CAAC;AAAE,0BAAQ,GAAG;AAAE,sBAAI,CAAQ,GAAG;iBAAE,CAAC,AAD/C,CAAA;eAEF,CAAC,CAAC;aACJ,CAAC,CACc;AAAA;AAElB,eAAK,UAAU;AAIb,mBAHA,CAAQ,GAAG,CAAQ,IAAI,CAAC,UAAA,CAAC;AACvB,qBAAO,kBAAqB,CAAC,CAAC,CAAC,CAAC;aACjC,CAAC,EACK,4BAAW,CAAC,CAAQ,CAAC,KAAK,CAAC,UAAA,CAAW;AAC3C,kBAAI,CAAM,GAAG,CAAW,OAAO,CAAC,UAAC,CAAC,EAAE,CAAC;AACnC,uBAAA,AAAI,CAAC,IAAI,CAAC,GACD,CAAC,OAAO,CAAC,CAAC,CAAC,GACb,AAAK,CAAC,GAGN,CAAC,GAFC,CAAC,AACT,CAAA;eAEF,EAAE,EAAE,CAAC,CAAC;AACP,qBAAO,6BAAY,UAAA,CAAO;AACxB,iBAAM,KAAK,CAAC;AAAE,0BAAQ,GAAG;AAAE,sBAAI,CAAQ,GAAG;iBAAE,CAAC,EAC7C,CAAO,CAAC,CAAM,CAAC,AAD8B,CAAA;eAE9C,CAAC,CAAC;aACJ,CAAC,AAdA,CAcC;AAAA;AAEL;AACE,kBAAM,IAAI,KAAK,CAAC,iBAAiB,GAAG,CAAQ,IAAI,CAAC,CAAC;AAAA,SACnD;;AAED,eAAO,6BAAY,UAAA,CAAO;iBAAI,CAAO,CAAC;AAAE,oBAAQ,GAAG;AAAE,yBAAa,CAAQ;WAAE,CAAC;SAAA,CAAC,CAAC;OAChF;;AACD,aAAO,IAAI,gBAAgB,CAAC,CAAQ,CAAC,CAAC;KACvC;;;WAEc,UAAC,CAAG,EAAE,CAAC;AACpB,aAAA,AAAI,CAAG,YAAY,KAAK,GACf;AAAE,gBAAQ,GAAG;AAAE,iBAAS,CAAG,SAAS,EAAE;AAAE,eAAO,CAAG,MAAM;AAAE,YAAI,CAAC,GAAG;OAAE,IAE3E,CAAG,GAAG,GAAG,CAAC,GAAG,EACN,CAAG,CADG,AAEd,CAAA;KACF;;;WAEc,UAAC,CAAC,EAAE,CAAM;;AACvB,aAAO,6BAAY,UAAC,CAAO,EAAE,CAAM;AACjC;AAME,mBALA,AAAK,CAAM,GAEJ,AAAK,KAAK,QAAQ,CAAC,CAAM,CAAC,KAC/B,CAAM,GAAG,CAAC,CAAM,CAAC,CAAA,AAClB,GAHC,CAAM,GAAG,EAAE,AAGZ,EACM,CAAC,IAAI,CADX;AAED,iBAAK,KAAK;AACR,qBAAO,oBAAuB,CAAC,CAAC,CAAC,KAAK,CAAC,UAAA,CAAS;AAO9C,uBANA,AAAI,CAAS,IACX,CAAS,GAAG,GAAG,CAAC,GAAG,EACnB,CAAM,KAAK,CAAC,CAAS,CAAC,CADH,GAGnB,CAAM,KAAK,CAAC;AAAE,0BAAQ,GAAG;AAAE,sBAAI,CAAC,GAAG;iBAAE,CAAC,AACvC,EACM,CAAO,CAAC,CAAM,CAAC,AADrB,CACsB;eACxB,CAAC,SAAM,CAAC,UAAA,CAAG;AAEV,uBADA,CAAM,KAAK,CAAC,iBAAoB,CAAC,CAAG,EAAE,CAAC,CAAC,CAAC,EAClC,CAAM,CAAC,CAAM,CAAC,AADoB,CACnB;eACvB,CAAC,CAAC;AAAA;AACL;AAEE,qBADA,CAAM,KAAK,CAAC,iBAAoB,CAAC;AAAE,wBAAQ,GAAG;eAAE,EAAE,CAAC,CAAC,CAAC,EAC9C,CAAM,CAAC,CAAM,CAAC,AADgC,CAC/B;AAAA,WACvB;UACD,OAAO,CAAG;AAEV,iBADA,CAAM,KAAK,CAAC,iBAAoB,CAAC,CAAG,EAAE,CAAC,CAAC,CAAC,EAClC,CAAM,CAAC,CAAM,CAAC,AADoB,CACnB;SACvB;OACF,CAAC,CAAC;KACJ;;;WAEiB,UAAC,CAAC;AAClB,cAAO,CAAC,IAAI;AACZ,aAAK,WAAW;AACd,iBAAO,IAAI,kBAAkB,CAAC,CAAC,CAAC,CAAC;AAAA;AACnC,aAAK,WAAW;AACd,iBAAO,IAAI,kBAAkB,CAAC,CAAC,CAAC,CAAC;AAAA;AACnC,aAAK,aAAa;AAChB,iBAAO,IAAI,oBAAoB,CAAC,CAAC,CAAC,CAAC;AAAA;AACrC,aAAK,SAAS;AACZ,iBAAO,IAAI,gBAAgB,CAAC,CAAC,CAAC,CAAC;AAAA;AACjC,aAAK,SAAS;AACZ,iBAAO,IAAI,gBAAgB,CAAC,CAAC,CAAC,CAAC;AAAA;AACjC;AACE,gBAAM,IAAI,KAAK,CAAC,qBAAqB,GAAG,CAAC,IAAI,CAAC,CAAC;AAAA,OAChD;KACF;;;WAEc,UAAC,CAAC;;AACf,aAAO,6BAAY,UAAC,CAAO,EAAE,CAAM;AACjC,eAMO,CAAM,CANb,AAAK,eAAkB,GAGvB,AAAK,CAAC,GAGQ;AAAE,kBAAQ,GAAG;AAAE,mBAAS,QAAQ;SAAE,GAFhC;AAAE,kBAAQ,GAAG;SAAE,AAC9B,GAJe;AAAE,kBAAQ,GAAG;SAAE,AAC9B,CAIgD,CAJhD;OAKF,CAAC,CAAC;KACJ;;;WAEgB,UAAC,CAAC;AAEjB,aADA,IAAI,mBAAmB,GAAG,CAAC,KAAK,mBAAmB,EAC5C,6BAAY,UAAA,CAAO;AAExB,eAAO,CAAO,EAAE,CAAC;OAClB,CAAC,AAJiD,CAIhD;KACJ;;;WAEgB,UAAC,CAAK;;AACrB,aAAO,6BAAY,UAAC,CAAO,EAAE,CAAM;AACjC,AAAK,aAAK,QAAQ,CAAC,CAAK,CAAC,KACvB,CAAK,GAAG,CAAC,CAAK,CAAC,CAAA,AAChB,CAAA;AACD,YAAI,CAAQ,GAAG,CAAK,OAAO,CAAC,UAAA,CAAC;AAC3B,iBAAA,AAAI,AAAW,mBAAmB,KAA9B,CAAC,KAAK,AAAwB,GACzB,CAAA,CAAK,GAEd,AAAK,CAAC,QAAQ,IAGT,CAAC,WAAW,AAHH,IAMT,CAAC,UAAU,AAJf,GAOM,CAAA,CAAI,GARF,CAAA,CAAK,AACb,AAHA,CAAA;SAWF,CAAC,CAAC;AACH,YAAI,AAAoB,CAAC,KAArB,CAAQ,OAAO,AAAM,EACvB,OAAO,CAAM,CAAC;AAAE,kBAAQ,GAAG;AAAE,mBAAS,sBAAsB;SAAE,CAAC,CAAC,AACjE;AACD,SAAQ,QAAQ,CAAC,UAAA,CAAC;AAChB,AAAK,WAAC,SAAS,GAGb,CAAC,SAAS,EAAE,GAFZ,CAAC,SAAS,GAAG,CAAC,AAGf,EACD,CAAC,WAAW,GAAG,aAAgB,SAAS,AADvC,CAAA;SAEF,CAAC,CAAA;AACF,YAAI,CAAO,GAAG,IAAI,UAAU,CAAC,CAAK,CAAC,CAAC;;AACpC,iCAAY,CAAC,aAAgB,aAAa,EAAE,CAAO,EAAE,UAAA,CAAG;AACtD,iBAAA,AAAI,CAAG,GACE,CAAM,CAAC,CAAG,CAAC,IAEpB,aAAgB,iBAAiB,CAAC,CAAO,CAAC,EACnC,CAAO,CAAC;AAAC,kBAAK,CAAO;AAAE,kBAAM;AAClC,qBAAU,CAAC,8DAA8D,CAAC,EAC1E,CAAa,QAAQ,EAAE,AADmD,CAAA;aAE3E;WAAC,CAAC,CAJuC,AADzC,CAAA;SAMF,CAAC,CAAA;OACH,CAAC,CAAC;KACJ;;;WAEgB,UAAC,CAAC;;AACjB,aAAO,6BAAY,UAAC,CAAO,EAAE,CAAM;AACjC;AACE,cAAI,CAAA,CAAC,KAAK,mBAAmB,EAyBtB,OAKE,CAAM,CALR,AAAI,aAAgB,kBAAkB,KAAK,CAAC,KAAK,kBAAkB,GAExE,AAAK,SAAY,GAGH;AAAE,oBAAQ,GAAG;AAAE,sBAAU;AACrC,mBAAK,KAAK;AACV,mBAAK,cAAc;AACnB,oBAAM;AACJ,wBAAQ,CAAC,KAAK,OAAO;eACtB;aACF;WAAC,GARc;AAAE,oBAAQ,GAAG;AAAE,qBAAS,yBAAyB;WAAE,AAClE,GAUa;AAAE,oBAAQ,GAAG;WAAE,AAC9B,CAJI,CAIJ;AAvCC,AAAI,uBAAgB,kBAAkB,KAAK,CAAC,KAAK,kBAAkB,IACjE,wBAAW,CAAC,aAAgB,aAAa,EAAE,UAAC,CAAG,EAAE,CAAI;AACnD,gBAAI,CAAG,EACL,OAAO,CAAM,CAAC,CAAG,CAAC,CAAC,AACpB;AACD,gBAAI,CAAK,GAAG,EAAE,CAAC;;AACf;AACE,eAAK,GAAG,IAAI,MAAM,CAAC,CAAI,CAAC,CAAC;cACzB,OAAO,CAAC;AACR,qBAAO,CAAM,CAAC;AAAE,wBAAQ,GAAG;AAAE,yBAAS,oBAAoB;eAAE,CAAC,CAAC;aAC/D;;AACD,mBAAA,AAAI,CAAC,KAAK,YAAY,GACpB,KAAA,mBAAsB,CAAC,CAAK,CAAC,KAAK,CAAC,UAAA,CAAM;AACvC,qBAAO,CAAO,CAAC,CAAM,CAAC,CAAC;aACxB,CAAC,SAAM,CAAC,UAAA,CAAG;AACV,qBAAO,CAAM,CAAC,CAAG,CAAC,CAAC;aACpB,CAAC,IAEF,CAAI,GAAG,CAAI,SAAS,CAAC,OAAO,CAAC,EAC7B,aAAgB,iBAAiB,CAAC,CAAI,CAAC,EAChC,CAAO,CAAC;AAAC,oBAAM,CAAI;aAAC,CAAC,CAFC,AAG9B,CAAA;WACF,CAAC,AACH,CAAA;UAiBH,OAAO,CAAG;AACV,iBAAO,CAAM,CAAC,CAAG,CAAC,CAAC;SACpB;OACF,CAAC,KAAK,CAAC,UAAA,CAAM;AACZ,eAAO,6BAAY,UAAA,CAAO;AACxB,cAAI,CAAM,GAAG;AAAE,oBAAQ,GAAG;AAAE,sBAAU;AACpC,mBAAK,KAAK;AACV,mBAAK,aAAa;AAClB,oBAAM;AACJ,sBAAM,0BAAa,CAAC,aAAgB,aAAa,CAAC;AAClD,2BAAW,aAAgB,kBAAkB;AAC7C,yBAAS,CAAM,KAAK;eACrB;AACD,oBAAM,CAAM,KAAK;aAClB;WAAC,CAAC;AACH,iBAAO,CAAO,CAAC,CAAM,CAAC,CAAC;SACxB,CAAC,CAAC;OACJ,CAAC,CAAC;KACJ;;;WAEkB,UAAC,CAAC;;AAEnB,aAAO,6BAAY,UAAC,CAAO,EAAE,CAAM;AACjC;AACE,cAAI,CAAC,CAAC,KAAK,QAAQ,EACjB,OAAO,CAAM,CAAC;AAAE,oBAAQ,GAAG;WAAE,CAAC,CAAC,AAChC;;AACD,mCAAY,CAAC,aAAgB,aAAa,EAAE,CAAC,KAAK,QAAQ,EAAE,UAAA,CAAG;AAC7D,mBAAA,AAAI,CAAG,GACE,CAAM,CAAC,CAAG,CAAC,IAEpB,aAAgB,iBAAiB,CAAC,CAAC,KAAK,QAAQ,CAAC,EAC1C,CAAO,CAAC;AAAE,sBAAQ,GAAG;AAAE,uBAAS,CAAA,CAAI;aAAE,CAAC,CADG,AADhD,CAAA;WAGF,CAAC,CAAA;UACF,OAAO,CAAG;AACV,iBAAO,CAAM,CAAC,CAAG,CAAC,CAAC;SACpB;OACF,CAAC,CAAC;KACJ;;;WAEc,UAAC,CAAC;AACf,aAAO,6BAAY,UAAC,CAAO,EAAE,CAAM;AACjC,eAAA,AAAI,CAAC,GACI,CAAO,CAAC;AAAE,kBAAQ,GAAG;AAAE,mBAAS,CAAA,CAAI;SAAE,CAAC,GAEzC,CAAM,CAAC;AAAE,kBAAQ,GAAG;SAAE,CAAC,AAD7B,CAAA;OAEF,CAAC,CAAC;KACJ;;;WAlaa;AAEZ,gBAAU,CAAC;AACT,eAAO,KAAK,CAAC,GAAG,CAAC,CAAC;OACnB,EAAE,eAAe,CAAC,CAAC;KACrB;OA/IU,CAAa;;;;;IA+iBb,WAAW;AAEX,WAFA,CAAW,CAEV,CAAiB,EAAE,CAAiB;0BAFrC,CAAW,GAGpB,IAAI,cAAc,GAAG,CAAA,CAAK,EAC1B,IAAI,kBAAkB,GAAG,EAAE,EAC3B,IAAI,aAAa,GAAG,EAAE,EACtB,IAAI,SAAS,GAAG,IAAI,gBAAgB,EAAE,EACtC,IAAI,SAAS,GAAG,IAAI,EACpB,IAAI,kBAAkB,GAAG,CAAiB,EAC1C,IAAI,kBAAkB,GAAG,CAAiB;GAC3C;;sBAVU,CAAW;;WAYlB;;AACF,aAAO,6BAAY,UAAA,CAAO;AACxB,AAAI,kBAAa,GACf,CAAO,EAAE,GAET,UAAa,QAAQ,EAAE,KAAK,CAAC,UAAA,CAAE;AAC7B,oBAAa,GAAG,CAAE,EAClB,CAAO,EAAE,AADS,CAAA;SAEnB,CAAC,AACH,CAAA;OACF,CAAC,CAAC;KACJ;;;WAEsB;;AACrB,aAAO,IAAI,KAAK,EAAE,KAAK,CAAC;AACtB,eAAO,6BAAY,UAAC,CAAO,EAAE,CAAM;AACjC,cAAI,CAAK,GAAG,gCAAW,CAAC,OAAO,EAAE,CAAC,MAAM,CAAC,EAAE;AAAE,qBAAS,IAAI;WAAE,CAAC,CAAC;;AAC9D,WAAK,GAAG,CAAC,OAAO,EAAE,UAAA,CAAI;AACpB,gBAAI,CAAa,GAAI,AAAS,CAAC,KAAV,CAAI,AAAM,AAAC,CAAC;AACjC,aAAO,CAAC,CAAa,CAAC,CAAA;WACvB,CAAC,EACF,CAAK,GAAG,CAAC,OAAO,EAAE,UAAA,CAAG;AACnB,aAAM,CAAC,CAAG,CAAC,CAAC;WACb,CAAC,AAHA,CAAA;SAIH,CAAC,KAAK,CAAC,UAAA,CAAa;AAEnB,iBADA,eAAkB,GAAG,CAAa,EAC3B,6BAAY,UAAC,CAAO,EAAE,CAAM;AACjC,gBAAI,CAAO,GAAG,OAAO,IAAI,YAAY,IAAI,EAAE,CAAC;;AAC5C,gBAAI,CAAa,EAAE;AACjB,kBAAI,CAAI,GAAG,gCAAW,CAAC,MAAM,EAAE,CAAC,MAAM,EAAC,SAAS,CAAC,EAAE;AAAE,yBAAS,IAAI;eAAE,CAAC,CAAC;;AACtE,eAAI,OAAO,GAAG,CAAC,MAAM,EAAE,UAAA,CAAI;AACzB;AACE,sBAAI,CAAG,GAAG,IAAI,MAAM,CAAC,CAAI,CAAC,CAAC;AAC3B,mBAAO,GAAG,CAAG,QAAQ,CAAA;kBACrB,OAAO,CAAC;AACR,0CAAO,KAAK,CAAC,CAAC,CAAC,CAAC;iBACjB;eACF,CAAC,EACF,CAAI,GAAG,CAAC,OAAO,EAAE;AACf,iBAAO,CAAC,CAAO,CAAC,CAAC;eAClB,CAAC,EACF,CAAI,GAAG,CAAC,OAAO,EAAE,UAAA,CAAG;AAClB,iBAAM,CAAC,CAAG,CAAC,CAAC;eACb,CAAC,AANA,CAAA;aAOH;;AACD,aAAO,CAAC,CAAO,CAAC,CAAA;WACjB,CAAC,AArBgC,CAqB/B;SACJ,CAAC,CAAC;OACJ,CAAC,CAAC;KACJ;;;WAEsB;;AACrB,aAAO,6BAAY,UAAC,CAAO,EAAE,CAAM;AACjC,gCAAW,CAAC,cAAiB,EAAE,UAAC,CAAG,EAAE,CAAI;AACvC,iBAAA,AAAI,CAAG,GACE,CAAM,CAAC,CAAG,CAAC,GAEb,CAAO,CAAC,kBAAqB,CAAC,CAAI,CAAC,CAAC,AAD1C,CAAA;SAEF,CAAC,CAAC;OACJ,CAAC,CAAC;KACJ;;;WAEe,UAAC,CAAI;AACnB,UAAI,CAAO,GAAG,IAAI,kBAAkB;UAChC,CAAI,GAAG,8BAAiB,CAAC,MAAM,CAAC,CADC;;AAKrC,aAHA,CAAI,OAAO,CAAC,CAAI,CAAC,EACjB,IAAI,kBAAkB,GAAG,CAAI,OAAO,CAAC,KAAK,CAAC,EAEnC,CAAO,KAAK,IAAI,kBAAkB,AAHzB,CAG2B;KAC7C;;;WAEgB,UAAC,CAAY;;AAC5B,aAAO,IAAI,KAAK,EAAE,KAAK,CAAC;AAUtB,eATA,AAAI,CAAY,IAAI,cAAiB,KAAK,CAAY,IACpD,cAAiB,GAAG,CAAY,EAChC,AAAI,SAAY,IACd,SAAY,MAAM,EAAE,AACrB,EACD,SAAY,GAAG,IAAI,CAJa,GAMhC,CAAY,GAAG,cAAiB,AACjC,EACM,6BAAY,UAAA,CAAO;AACxB,kCAAW,CAAC,CAAY,EAAE,UAAC,CAAG,EAAE,CAAI;AAClC,gBAAI,CAAG,EACL,OAAO,CAAO,CAAC,CAAA,CAAI,CAAC,CAAC,AACtB;AACD,8BAAqB,CAAC,CAAI,CAAC,EAC3B,wBAAO,KAAK,qCAAmC,mBAAsB,CAAG,AAD7C,CAAA;AAG3B,gBAAI,CAAK,GAAG,IAAI,MAAM,CAAC,CAAI,CAAC,CAAC;AAC7B,mBAAA,AAAK,KAAK,QAAQ,CAAC,CAAK,CAAC,GAGzB,KAAA,CAAO,CAAC,CAAK,OAAO,CAAC,UAAA,CAAC;AACpB,qBAAO,AAAW,mBAAmB,KAA9B,CAAC,KAAK,AAAwB,CAAC;aACvC,CAAC,OAAO,CAAC,UAAC,CAAC,EAAE,CAAC;AACb,qBAAO,CAAC,IAAI,CAAC,CAAC,SAAS,CAAC;aACzB,EAAE,CAAA,CAAI,CAAC,CAAC,GANA,CAAO,CAAC,CAAA,CAAI,CAAC,AACrB,CAAA;WAMF,CAAC,CAAC;SACJ,CAAC,AAnBD,CAmBE;OACJ,CAAC,KAAK,CAAC,UAAA,CAAO;AACb,eAAO,6BAAY,UAAC,CAAO,EAAE,CAAM;AACjC;AACE,mBAAA,AAAI,SAAY,IAAI,CAAC,mBAAsB,GAClC,CAAO,CAAC,CAAO,CAAC,IAEzB,SAAY,GAAG,QAAQ,MAAM,CAAC,cAAiB,CAAC,EAChD,SAAY,GAAG,CAAC,QAAQ,EAAE,mBAAsB,CAAC,EACjD,SAAY,GAAG,CAAC,QAAQ,EAAE,mBAAsB,CAAC,EAC1C,CAAO,CAAC,CAAO,CAAC,CAHyB,AAD/C,CAAA;YAKD,OAAO,CAAG;AACV,mBAAO,CAAM,CAAC,CAAG,CAAC,CAAC;WACpB;SACF,CAAC,CAAC;OACJ,CAAC,CAAC;KACJ;OAhIU,CAAW;;;;;IAmIX,kBAAkB;AAClB,WADA,CAAkB;0BAAlB,CAAkB,GAE3B,IAAI,MAAM,GAAG,EAAE,EACf,IAAI,YAAY,GAAG,IAAI,WAAW,CAAC,IAAI,uBAAuB,EAAE,EAAE,IAAI,uBAAuB,EAAE,CAAC;GACjG;;sBAJU,CAAkB;;WAMP;;AACpB,aAAQ,CAAA;AACN,YAAI,CAAG,GAAG,CAAA,CAAK,CAAC;AAChB,eAAO;AACL,iBAAO,6BAAY,UAAC,CAAO,EAAE,CAAM;AACjC,AAAI,aAAG,KAGP,CAAG,GAAG,CAAA,CAAI,EACV,aAAgB,wBAAwB,EAAE,KAAK,CAAC,UAAA,CAAQ;AACtD,kBAAI,CAAC,CAAQ,EAEX,OADA,CAAG,GAAG,CAAA,CAAK,EACJ,CAAO,EAAE,AADL,CACM,AAClB;AACD,kBAAI,CAAQ,GAAG,MAAM,KAAK,CAAC,OAAU,CAAC,IAAI,CAAC,UAAA,CAAU;AACnD,uBAAO,OAAU,CAAC,CAAU,CAAC,QAAQ,CAAC;AACpC,uBAAK,KAAK;AACV,uBAAK,WAAW;AAChB,wBAAM;AACJ,uCAAmB,aAAgB,kBAAkB;mBACtD;iBACF,CAAC,CAAC;eACJ,CAAC,CAAC;AACH,qBAAO,4BAAW,CAAC,CAAQ,CAAC,CAAC;aAC9B,CAAC,KAAK,CAAC;AAEN,qBADA,CAAG,GAAG,CAAA,CAAK,EACJ,CAAO,EAAE,AADL,CACM;aAClB,CAAC,SAAM,CAAC,UAAA,CAAG;AAGV,qBAFA,wBAAO,KAAK,CAAC,CAAG,MAAM,CAAC,EACvB,CAAG,GAAG,CAAA,CAAK,EACJ,CAAM,CAAC,CAAG,CAAC,AAFK,CAEJ;aACpB,CAAC,CAvBQ,AADT,CAAA;WAyBF,CAAC,CAAC;SACJ,CAAC;QACH,EAAE,CAAE;KACN;;;WAEqB;;AACpB,aAAQ,CAAA;AACN,eAAO;AACL,iBAAO,6BAAY,UAAC,CAAO,EAAE,CAAM;AACjC;AACE,kBAAI,CAAA,aAAgB,kBAAkB,EAgBpC,OAAO,CAAO,EAAE,CAAC,AAClB;AAhBC,kBAAI,CAAQ,GAAG,MAAM,KAAK,CAAC,OAAU,CAAC,IAAI,CAAC,UAAA,CAAU;AACnD,uBAAA,AAAI,OAAU,CAAC,CAAU,CAAC,QAAQ,GACzB,OAAU,CAAC,CAAU,CAAC,QAAQ,CAAC;AACpC,uBAAK,KAAK;AACV,uBAAK,cAAc;iBACpB,CAAC,GAJJ,SAKC,CAAA;eACF,CAAC,CAAC;;AACH,0CAAW,CAAC,CAAQ,CAAC,KAAK,CAAC;AACzB,uBAAO,CAAO,EAAE,CAAC;eAClB,CAAC,SAAM,CAAC,UAAA,CAAG;AAEV,uBADA,wBAAO,KAAK,CAAC,CAAG,MAAM,CAAC,EAChB,CAAM,CAAC,CAAG,CAAC,AADK,CACJ;eACpB,CAAC,CAAA;cAIJ,OAAO,CAAG;AACV,qBAAO,CAAM,CAAC,CAAG,CAAC,CAAC;aACpB;WACF,CAAC,CAAC;SACJ,CAAC;QACH,EAAE,CAAE;KACN;;;WAEG,UAAC,CAAU;AACb,aAAO,IAAI,MAAM,CAAC,CAAU,CAAC,CAAC;KAC/B;;;WAEM,UAAC,CAAU;AAChB,aAAO,IAAI,MAAM,CAAC,CAAU,CAAC,CAAC;KAC/B;;;WAEoB,UAAC,CAAU;AAC9B,aAAO,CAAC,CAAC,IAAI,KAAK,CAAC,CAAU,CAAC,CAAC;KAChC;;;WAEW,UAAC,CAAO,EAAE,CAAa,EAAE,CAAkB;;UACjD,CAAU,GAAG,CAAa,WAAW;UACrC,CAAO,GAAI,AAAmC,CAAC,KAApC,MAAM,KAAK,CAAC,IAAI,MAAM,CAAC,OAAO,AAAM,AAAC;AACpD,AAAI,OAAO,IACT,wBAAO,MAAM,2CAAyC,CAAU,CAAG,AACpE,CAAA;AAED,UAAI,CAAc,GAAG,CAAkB,IAAI,CAAC;AAC1C,uBAAe,CAAa;AAC5B,iBAAS,CAAO;AAChB,cAAM,UAAU;OACjB,EAAE;AACD,iBAAS;AACP,uBAAa,CAAU;AACvB,wBAAc,CAAa,UAAU;AACrC,yBAAe,IAAI,YAAY,SAAS;AACxC,wBAAc,wBAAW,EAAE;AAC3B,0BAAgB,6BAAY,gBAAgB;AAC5C,0BAAgB,6BAAY,gBAAgB;SAC7C;OACF,CAAC,CAAC;AACH,OAAa,GAAG,CAAC,OAAO,EAAE;AACxB,SAAc,MAAM,EAAE,EACtB,SAAY,CAAC,CAAU,CAAC,EACxB,wBAAO,KAAK,sCAAoC,CAAU,OAAI,AAFxC,CAAA;OAGvB,CAAC,EACF,IAAI,MAAM,CAAC,CAAU,CAAC,GAAG,IAAI,aAAa,CAAC,CAAO,EAAE,CAAc,EAAE,CAAa,EAAE,IAAI,YAAY,CAAC,EACpG,wBAAO,KAAK,mCAAiC,CAAU,OAAI,AAFzD,CAAA;KAGH;OAlHU,CAAkB","file":"device-manager.js","sourcesContent":["'use strict';\n\nimport 'source-map-support/register';\nimport os from 'os';\nimport fs from 'fs';\nimport readline from 'readline';\nimport { EventEmitter } from 'events';\nimport Promise from 'es6-promises';\nimport cproc from 'child_process';\nimport crypto from 'crypto';\nimport path from 'path';\nimport * as chokidar from 'chokidar';\nimport RED from 'node-red';\n\nconst REBOOT_DELAY_MS = 1000;\nconst TRACE = process.env.DEBUG || false;\n\nconst EDISON_YOCTO_SN_PATH = '/factory/serial_number';\nconst PROC_CPUINFO_PATH = '/proc/cpuinfo';\n\nexport class DeviceIdResolver {\n  constructor() {\n    this.hearbeatIntervalMs = -1;\n    this.ciotSupported = false;\n  }\n\n  resolve() {\n    return new Promise((resolve, reject) => {\n      return this._resolveCANDYIoT(resolve, reject);\n    });\n  }\n\n  _resolveCANDYIoT(resolve, reject) {\n    // CANDY IoT\n    // TODO\n    return this._resolveEdison(resolve, reject);\n  }\n\n  _resolveEdison(resolve, reject) {\n    // Intel Edison Yocto\n    fs.stat(EDISON_YOCTO_SN_PATH, err => {\n      if (err) {\n        return this._resolveLTEPi(resolve, reject);\n      }\n      fs.read(EDISON_YOCTO_SN_PATH, (err, data) => {\n        if (err) {\n          return reject(err);\n        }\n        resolve('EDN:' + data);\n      });\n    });\n  }\n\n  _resolveLTEPi(resolve, reject) {\n    // LTE Pi\n    // TODO\n    return this._resolveRPi(resolve, reject);\n  }\n\n  _resolveRPi(resolve, reject) {\n    // RPi\n    fs.stat(PROC_CPUINFO_PATH, err => {\n      if (err) {\n        return this._resolveMAC(resolve, reject);\n      }\n      let reader = readline.createInterface({\n        terminal: false,\n        input: fs.createReadStream(PROC_CPUINFO_PATH)\n      });\n      let id = '';\n      reader.on('line', line => {\n        if (line.indexOf('Serial') >= 0 && line.indexOf(':') >= 0) {\n          id = line.split(':')[1].trim();\n        }\n      });\n      reader.on('close', err => {\n        if (err || !id) {\n          return this._resolveMAC(resolve, reject);\n        }\n        resolve('RPi:' + id);\n      });\n    });\n  }\n\n  _resolveMAC(resolve, reject) {\n    let ifs = os.networkInterfaces();\n    for (let key in ifs) {\n      if (ifs.hasOwnProperty(key)) {\n        for (let i in ifs[key]) {\n          let mac = ifs[key][i].mac;\n          if (mac && mac !== '00:00:00:00:00:00') {\n            return resolve('MAC:' + key + ':' + mac.replace(new RegExp(':', 'g'), '-').toLowerCase());\n          }\n        }\n      }\n    }\n    reject(new Error('No identifier!'));\n  }\n}\n\nexport class DeviceManager {\n  constructor(primary, listenerConfig, accountConfig, deviceState) {\n    if (!accountConfig) {\n      throw new Error('accountConfig is required');\n    }\n    this.primary = primary;\n    this.listenerConfig = listenerConfig;\n    this.accountConfig = accountConfig;\n    this.deviceState = deviceState;\n    this.prefix = '[CANDY RED] {DeviceManager}:[' + accountConfig.accountFqn + '] ';\n    this.cmdQueue = [];\n    this.events = new EventEmitter();\n    this.events.on('opened', () => {\n      this._warn('connected');\n      this._resume().then(empty => {\n        if (!empty) {\n          this._warn('flushed queued commands');\n        }\n      }).catch(err => {\n        this._error(err.stack);\n      });\n    });\n    this.events.on('closed', () => {\n      this._warn('disconnected');\n      this._reset();\n    });\n    this.events.on('erro', (err1, err2) => {\n      if (err2) {\n        this._warn('failed to connect' + (err2.status ? ' :' + err2.status : ''));\n      } else {\n        this._warn('connection error');\n      }\n      this._reset();\n    });\n    this.events.on('ping', () => {\n      if (this.pingTimeoutTimer) {\n        clearTimeout(this.pingTimeoutTimer);\n      }\n      this.pingTimeoutTimer = setTimeout(() => {\n        this._warn(`ping has not come for more than ${this.hearbeatIntervalMs * 1.5 / 1000} seconds`);\n        this._reset();\n        this.listenerConfig.server.close(); // close event will start a new connection after 3+ seconds\n      }, this.hearbeatIntervalMs * 1.5);\n    });\n    // receiving an incoming message (sent from a source)\n    this.events.send = msg => {\n      let payload = msg.payload;\n      if (payload) {\n        try {\n          payload = JSON.parse(payload);\n        } catch (_) {\n        }\n      }\n      if (TRACE) {\n        this._info('Received!:' + JSON.stringify(payload));\n      }\n      if (!this.enrolled) {\n        if (!payload || !payload.status || Math.floor(payload.status / 100) !== 2) {\n          // Terminate everything and never retry\n          this.listenerConfig.close();\n          this._error('Enrollment error!' +\n            ' This device is not allowed to access the account:' +\n            accountConfig.accountFqn);\n          return;\n        } else {\n          payload = payload.commands;\n          this.enrolled = true;\n        }\n      }\n      this._performCommands(payload).then(result => {\n        this._sendToServer(result);\n      }).catch(result => {\n        if (result instanceof Error) {\n          let err = result;\n          result = {};\n          result.status = 500;\n          result.message = err.toString();\n          result.stack = err.stack;\n        } else if (result && !Array.isArray(result)) {\n          result = [result];\n        }\n        this._sendToServer(result);\n      }).catch(err => {\n        this._error(err.stack);\n      });\n    };\n    this.listenerConfig.registerInputNode(this.events);\n    this.listenerConfig.send = payload => {\n      if ((typeof(payload) === 'object') && !(payload instanceof Buffer)) {\n        payload = JSON.stringify(payload);\n      }\n      return this.listenerConfig.broadcast(payload);\n    };\n    this._reset();\n  }\n\n  _info(msg) {\n    RED.log.info(this.prefix  + msg);\n  }\n  _warn(msg) {\n    RED.log.warn(this.prefix  + msg);\n  }\n  _error(msg) {\n    RED.log.error(this.prefix  + msg);\n  }\n\n  _resume() {\n    let current = this.cmdQueue;\n    if (current.length === 0) {\n      return new Promise(resolve => resolve(true));\n    }\n    this.cmdQueue = [];\n    current = current.map(c => {\n      return this.publish(c);\n    });\n    return Promise.all(current);\n  }\n\n  _enqueue(commands) {\n    if (commands) {\n      this.cmdQueue.push(commands);\n    }\n  }\n\n  _reset() {\n    this.cmdIdx = 0;\n    this.commands = {};\n    this.enrolled = false;\n    if (this.pingTimeoutTimer) {\n      clearTimeout(this.pingTimeoutTimer);\n      delete this.pingTimeoutTimer;\n    }\n  }\n\n  publish(commands) {\n    return this._sendToServer(commands);\n  }\n\n  static restart() {\n    // systemctl shuould restart the service\n    setTimeout(() => {\n      process.exit(219);\n    }, REBOOT_DELAY_MS);\n  }\n\n  _sendToServer(result) {\n    return new Promise(resolve => {\n      if (!result || Array.isArray(result) && result.length === 0 || Object.keys(result) === 0) {\n        // do nothing\n        this._info('No commands to respond to');\n        return resolve();\n      }\n      result = this._numberResponseCommands(result);\n      let sent = this.listenerConfig.send(result);\n      if (TRACE && sent) {\n        this._info('Sent!:' + JSON.stringify(result));\n      }\n      if (!sent) {\n        this._info('Enqueue the commands in order to be sent later on');\n        this._enqueue(result);\n        return resolve();\n      }\n      if (!Array.isArray(result)) {\n        result = [result];\n      }\n      if (result.reduce((p, c) => {\n        return p || (c && c.restart);\n      }, false)) {\n        this._warn('Restarting this process!!');\n        DeviceManager.restart();\n      }\n      resolve();\n    });\n  }\n\n  _nextCmdIdx() {\n    this.cmdIdx = (this.cmdIdx + 1) % 65536;\n    return this.cmdIdx;\n  }\n\n  _numberResponseCommands(result) {\n    let processed = result;\n    if (!Array.isArray(result)) {\n      processed = [result];\n    }\n    processed.forEach(r => {\n      if (r.commands) {\n        this._numberRequestCommands(r.commands);\n      } else {\n        this._numberRequestCommands(r);\n      }\n    });\n    return result;\n  }\n\n  _numberRequestCommands(commands) {\n    let processed = commands;\n    if (!Array.isArray(commands)) {\n      processed = [commands];\n    }\n    processed.forEach(c => {\n      if (!c.id) {\n        c.id = this._nextCmdIdx();\n      }\n      this.commands[c.id] = c;\n      if (c.done) {\n        // done callback\n        if (!this.done) {\n          this.done = {};\n        }\n        this.done[c.id] = c.done;\n        delete c.done;\n      }\n      if (c.cat === 'ctrl' && (c.act === 'sequence' || c.act === 'parallel')) {\n        this._numberRequestCommands(c.args);\n      }\n    });\n    return commands;\n  }\n\n  _performCommands(commands) {\n    if (!commands) {\n      return new Promise(resolve => resolve()); // do nothing\n    }\n\n    if (Array.isArray(commands)) {\n      // same as act:parallel\n      let promises = commands.map(c => {\n        return this._performCommands(c);\n      });\n      return Promise.all(promises).then(resultArray => {\n        let result = resultArray.reduce((a, b) => {\n          if (a && b) {\n            return a.concat(b);\n          } else if (!a) {\n            return b;\n          }\n          return a;\n        }, []);\n        return new Promise(resolve => resolve(result));\n      });\n    }\n\n    if (commands.status) {\n      // response to the issued command\n      if (commands.id) {\n        let c = this.commands[commands.id];\n        if (c) {\n          let done;\n          if (this.done && this.done[commands.id]) {\n            done = this.done[commands.id];\n          }\n          if (Math.floor(commands.status / 100) !== 2) {\n            RED.log.info(`Not-OK status to command: ${JSON.stringify(c)}, status:${JSON.stringify(commands)}`);\n            try {\n              done(commands.status);\n            } catch (_) {\n            }\n          } else if (done) {\n            try {\n              done();\n            } catch (_) {\n            }\n          }\n          if (done) {\n            delete this.done[commands.id];\n          }\n          delete this.commands[commands.id];\n        }\n      }\n      if (commands.commands) {\n        return this._performCommands(commands.commands);\n      }\n      if (Math.floor(commands.status / 100) !== 2) {\n        this._info(`Server returned Not-OK, status:${JSON.stringify(commands)}`);\n      }\n      return new Promise(resolve => resolve()); // do nothing\n    }\n\n    if (!commands.id) {\n      return new Promise(resolve => resolve({ status: 400, message: 'id missing' }));\n    }\n    if (!commands.cat) {\n      return new Promise(resolve => resolve({ status: 400, message: 'category missing' }));\n    }\n\n    if (commands.cat === 'ctrl') {\n      let children = commands.args || [];\n      if (!Array.isArray(children)) {\n        children = [children];\n      }\n      let promises;\n      switch(commands.act) {\n      case 'sequence':\n        promises = children.reduce((p, c) => {\n          if (!c) {\n            return p;\n          }\n          let next = p.then(result => {\n            return this._performCommand(c, result);\n          });\n          return next;\n        }, new Promise(resolve => resolve())).then(result => {\n          return new Promise(resolve => {\n            if (result) {\n              result.push({ status: 200, id: commands.id });\n              return resolve(result);\n            }\n            return resolve({ status: 400, id: commands.id });\n          });\n        });\n        return promises;\n\n      case 'parallel':\n        promises = children.map(c => {\n          return this._performCommands(c);\n        });\n        return Promise.all(promises).then(resultArray => {\n          let result = resultArray.reduce((a, b) => {\n            if (a && b) {\n              return a.concat(b);\n            } else if (!a) {\n              return b;\n            }\n            return a;\n          }, []);\n          return new Promise(resolve => {\n            result.push({ status: 200, id: commands.id });\n            resolve(result);\n          });\n        });\n\n      default:\n        throw new Error('unknown action:' + commands.act);\n      }\n\n      return new Promise(resolve => resolve({ status: 400, errCommands: commands }));\n    }\n    return this._performCommand(commands);\n  }\n\n  _buildErrResult(err, c) {\n    if (err instanceof Error) {\n      return { status: 500, message: err.toString(), stack: err.stack, id: c.id };\n    } else {\n      err.id = c.id;\n      return err;\n    }\n  }\n\n  _performCommand(c, result) {\n    return new Promise((resolve, reject) => {\n      try {\n        if (!result) {\n          result = [];\n        } else if (!Array.isArray(result)) {\n          result = [result];\n        }\n        switch(c.cat) {\n        case 'sys':\n          return this._performSysCommand(c).then(sysResult => {\n            if (sysResult) {\n              sysResult.id = c.id;\n              result.push(sysResult);\n            } else {\n              result.push({ status: 200, id: c.id });\n            }\n            return resolve(result);\n          }).catch(err => {\n            result.push(this._buildErrResult(err, c));\n            return reject(result);\n          });\n        default:\n          result.push(this._buildErrResult({ status: 400 }, c));\n          return reject(result);\n        }\n      } catch (err) {\n        result.push(this._buildErrResult(err, c));\n        return reject(result);\n      }\n    });\n  }\n\n  _performSysCommand(c) {\n    switch(c.act) {\n    case 'provision':\n      return this._performProvision(c);\n    case 'syncflows':\n      return this._performSyncFlows(c);\n    case 'updateflows':\n      return this._performUpdateFlows(c);\n    case 'inspect':\n      return this._performInspect(c);\n    case 'restart':\n      return this._performRestart(c);\n    default:\n      throw new Error('Unsupported action:' + c.act);\n    }\n  }\n\n  _performInspect(c) {\n    return new Promise((resolve, reject) => {\n      if (!this.ciotSupported) {\n        return reject({ status: 405 });\n      }\n      if (!c) {\n        return reject({ status: 400 });\n      }\n      return reject({ status: 501, message: 'TODO!!' });\n    });\n  }\n\n  _performProvision(c) {\n    this.hearbeatIntervalMs = c.args.hearbeatIntervalMs;\n    return new Promise(resolve => {\n      // do stuff if any after provisioning\n      return resolve();\n    });\n  }\n\n  _updateLocalFlows(flows) {\n    return new Promise((resolve, reject) => {\n      if (!Array.isArray(flows)) {\n        flows = [flows];\n      }\n      let accounts = flows.filter(f => {\n        if (f.type !== 'CANDY EGG account') {\n          return false;\n        }\n        if (!f.managed) {\n          return false;\n        }\n        if (!f.accountFqn) {\n          return false;\n        }\n        if (!f.loginUser) {\n          return false;\n        }\n        return true;\n      });\n      if (accounts.length === 0) {\n        return reject({ status: 400, message: 'invalid flow content' });\n      }\n      accounts.forEach(a => {\n        if (!a.revision) {\n          a.revision = 1;\n        } else {\n          a.revision++;\n        }\n        a.originator = this.deviceState.deviceId;\n      });\n      let content = JSON.stringify(flows);\n      fs.writeFile(this.deviceState.flowFilePath, content, err => {\n        if (err) {\n          return reject(err);\n        }\n        this.deviceState.setFlowSignature(content);\n        return resolve({data:content, done: () => {\n          this._warn('FLOW IS UPDATED! RELOAD THE PAGE AFTER RECONNECTING SERVER!!');\n          DeviceManager.restart();\n        }});\n      });\n    });\n  }\n\n  _performSyncFlows(c) {\n    return new Promise((resolve, reject) => {\n      try {\n        if (c.args.flowUpdateRequired) {\n          if (this.deviceState.flowFileSignature !== c.args.expectedSignature) {\n            fs.readFile(this.deviceState.flowFilePath, (err, data) => {\n              if (err) {\n                return reject(err);\n              }\n              let flows = [];\n              try {\n                flows = JSON.parse(data);\n              } catch (_) {\n                return reject({ status: 500, message: 'My flow is invalid' });\n              }\n              if (c.args.publishable) {\n                this._updateLocalFlows(flows).then(result => {\n                  return resolve(result);\n                }).catch(err => {\n                  return reject(err);\n                });\n              } else {\n                data = data.toString('utf-8');\n                this.deviceState.setFlowSignature(data);\n                return resolve({data: data});\n              }\n            });\n          }\n        } else if (this.deviceState.flowFileSignature !== c.args.expectedSignature) {\n          // non-primary accounts are NOT allowed to download (to be delivered) flow files\n          if (!this.primary) {\n            return reject({ status: 405, message: 'not the primary account' });\n          }\n          return reject({ status: 202, commands: {\n            cat: 'sys',\n            act: 'deliverflows',\n            args: {\n              flowId: c.args.flowId\n            }\n          }});\n        } else {\n          // 304 Not Modified\n          return reject({ status: 304 });\n        }\n      } catch (err) {\n        return reject(err);\n      }\n    }).then(result => {\n      return new Promise(resolve => {\n        let status = { status: 202, commands: {\n          cat: 'sys',\n          act: 'updateflows',\n          args: {\n            name: path.basename(this.deviceState.flowFilePath),\n            signature: this.deviceState.flowFileSignature,\n            content: result.data\n          },\n          done: result.done\n        }};\n        return resolve(status);\n      });\n    });\n  }\n\n  _performUpdateFlows(c) {\n    // non-primary accounts are allowed to upload flow files\n    return new Promise((resolve, reject) => {\n      try {\n        if (!c.args.content) {\n          return reject({ status: 400 });\n        }\n        fs.writeFile(this.deviceState.flowFilePath, c.args.content, err => {\n          if (err) {\n            return reject(err);\n          }\n          this.deviceState.setFlowSignature(c.args.content);\n          return resolve({ status: 200, restart: true });\n        });\n      } catch (err) {\n        return reject(err);\n      }\n    });\n  }\n\n  _performRestart(c) {\n    return new Promise((resolve, reject) => {\n      if (c) {\n        return resolve({ status: 200, restart: true });\n      }\n      return reject({ status: 400 });\n    });\n  }\n}\n\nexport class DeviceState {\n\n  constructor(onFlowFileChanged, onFlowFileRemoved) {\n    this.ciotSupported = false;\n    this.flowFileSignature = '';\n    this.flowFilePath = '';\n    this.resolver = new DeviceIdResolver();\n    this.wartcher = null;\n    this.onFlowFileChanged = onFlowFileChanged;\n    this.onFlowFileRemoved = onFlowFileRemoved;\n  }\n\n  init() {\n    return new Promise(resolve => {\n      if (this.deviceId) {\n        resolve();\n      } else {\n        this.resolver.resolve().then(id => {\n          this.deviceId = id;\n          resolve();\n        });\n      }\n    });\n  }\n\n  testIfCANDYIoTInstalled() {\n    return this.init().then(() => {\n      return new Promise((resolve, reject) => {\n        let which = cproc.spawn('which', ['ciot'], { timeout: 1000 });\n        which.on('close', code => {\n          let ciotSupported = (code === 0);\n          resolve(ciotSupported);\n        });\n        which.on('error', err => {\n          reject(err);\n        });\n      }).then(ciotSupported => {\n        this.ciotSupported = ciotSupported;\n        return new Promise((resolve, reject) => {\n          let version = process.env.DEBUG_CIOTV || '';\n          if (ciotSupported) {\n            let ciot = cproc.spawn('ciot', ['info','version'], { timeout: 1000 });\n            ciot.stdout.on('data', data => {\n              try {\n                let ret = JSON.parse(data);\n                version = ret.version;\n              } catch (e) {\n                RED.log.info(e);\n              }\n            });\n            ciot.on('close', () => {\n              resolve(version);\n            });\n            ciot.on('error', err => {\n              reject(err);\n            });\n          }\n          resolve(version);\n        });\n      });\n    });\n  }\n\n  loadAndSetFlowSignature() {\n    return new Promise((resolve, reject) => {\n      fs.readFile(this.flowFilePath, (err, data) => {\n        if (err) {\n          return reject(err);\n        }\n        return resolve(this.setFlowSignature(data));\n      });\n    });\n  }\n\n  setFlowSignature(data) {\n    let current = this.flowFileSignature;\n    let sha1 = crypto.createHash('sha1');\n    sha1.update(data);\n    this.flowFileSignature = sha1.digest('hex');\n    // true for modified\n    return (current !== this.flowFileSignature);\n  }\n\n  testIfUIisEnabled(flowFilePath) {\n    return this.init().then(() => {\n      if (flowFilePath && this.flowFilePath !== flowFilePath) {\n        this.flowFilePath = flowFilePath;\n        if (this.watcher) {\n          this.watcher.close();\n        }\n        this.watcher = null;\n      } else {\n        flowFilePath = this.flowFilePath;\n      }\n      return new Promise(resolve => {\n        fs.readFile(flowFilePath, (err, data) => {\n          if (err) {\n            return resolve(true);\n          }\n          this.setFlowSignature(data);\n          RED.log.info(`[CANDY RED] flowFileSignature: ${this.flowFileSignature}`);\n\n          let flows = JSON.parse(data);\n          if (!Array.isArray(flows)) {\n            return resolve(true);\n          }\n          resolve(flows.filter(f => {\n            return f.type === 'CANDY EGG account';\n          }).reduce((p, c) => {\n            return p && !c.headless;\n          }, true));\n        });\n      });\n    }).then(enabled => {\n      return new Promise((resolve, reject) => {\n        try {\n          if (this.watcher || !this.flowFileSignature) {\n            return resolve(enabled);\n          }\n          this.watcher = chokidar.watch(this.flowFilePath);\n          this.watcher.on('change', this.onFlowFileChanged);\n          this.watcher.on('unlink', this.onFlowFileRemoved);\n          return resolve(enabled);\n        } catch (err) {\n          return reject(err);\n        }\n      });\n    });\n  }\n}\n\nexport class DeviceManagerStore {\n  constructor() {\n    this.store = {};\n    this.deviceState = new DeviceState(this._onFlowFileChangedFunc(), this._onFlowFileRemovedFunc());\n  }\n\n  _onFlowFileChangedFunc() {\n    return (() => {\n      let wip = false;\n      return () => {\n        return new Promise((resovle, reject) => {\n          if (wip) {\n            return;\n          }\n          wip = true;\n          this.deviceState.loadAndSetFlowSignature().then(modified => {\n            if (!modified) {\n              wip = false;\n              return resovle();\n            }\n            let promises = Object.keys(this.store).map(accountFqn => {\n              return this.store[accountFqn].publish({\n                cat: 'sys',\n                act: 'syncflows',\n                args: {\n                  expectedSignature: this.deviceState.flowFileSignature\n                }\n              });\n            });\n            return Promise.all(promises);\n          }).then(() => {\n            wip = false;\n            return resovle();\n          }).catch(err => {\n            RED.log.warn(err.stack);\n            wip = false;\n            return reject(err);\n          });\n        });\n      };\n    }());\n  }\n\n  _onFlowFileRemovedFunc() {\n    return (() => {\n      return () => {\n        return new Promise((resolve, reject) => {\n          try {\n            if (this.deviceState.flowFileSignature) {\n              let promises = Object.keys(this.store).map(accountFqn => {\n                if (this.store[accountFqn].primary) {\n                  return this.store[accountFqn].publish({\n                    cat: 'sys',\n                    act: 'deliverflows'\n                  });\n                }\n              });\n              Promise.all(promises).then(() => {\n                return resolve();\n              }).catch(err => {\n                RED.log.warn(err.stack);\n                return reject(err);\n              });\n            } else {\n              return resolve();\n            }\n          } catch (err) {\n            return reject(err);\n          }\n        });\n      };\n    }());\n  }\n\n  _get(accountFqn) {\n    return this.store[accountFqn];\n  }\n\n  _remove(accountFqn) {\n    delete this.store[accountFqn];\n  }\n\n  isWsClientInitialized(accountFqn) {\n    return !!this._get(accountFqn);\n  }\n\n  initWsClient(account, accountConfig, webSocketListeners) {\n    let accountFqn = accountConfig.accountFqn;\n    let primary = (Object.keys(this.store).length === 0);\n    if (primary) {\n      RED.log.error(`[CANDY RED] This account is PRIMARY: ${accountFqn}`);\n    }\n\n    let listenerConfig = webSocketListeners.get({\n      accountConfig: accountConfig,\n      account: account,\n      path: 'candy-ws'\n    }, {\n      headers: {\n        'x-acc-fqn': accountFqn,\n        'x-acc-user': accountConfig.loginUser,\n        'x-device-id': this.deviceState.deviceId,\n        'x-hostname': os.hostname(),\n        'x-candy-iotv': RED.settings.candyIotVersion,\n        'x-candy-redv': RED.settings.candyRedVersion,\n      }\n    });\n    accountConfig.on('close', () => {\n      listenerConfig.close();\n      this._remove(accountFqn);\n      RED.log.info(`[CANDY RED] Disassociated from [${accountFqn}]`);\n    });\n    this.store[accountFqn] = new DeviceManager(primary, listenerConfig, accountConfig, this.deviceState);\n    RED.log.info(`[CANDY RED] Associated with [${accountFqn}]`);\n  }\n}\n"]}